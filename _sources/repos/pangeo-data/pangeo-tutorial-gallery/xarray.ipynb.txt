{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Xarray Tutorial\n",
    "\n",
    "<div class=\"alert-info\">\n",
    "\n",
    "### Overview\n",
    "    \n",
    "* **teaching:** 30 minutes\n",
    "* **exercises:** 0\n",
    "* **questions:**\n",
    "    * What is xarray designed to do?\n",
    "    * How do I create an xarray Dataset?\n",
    "    * How does indexing work with xarray?\n",
    "    * How do I run computations on xarray datasets?\n",
    "    * What are ways to ploy xarray datasets?\n",
    "</div>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Table of contents\n",
    "1. [**Xarray primer**](#Xarray-primer)\n",
    "1. [**Creating data**](#Creating-data)\n",
    "1. [**Loading data**](#Loading-data)\n",
    "1. [**Selecting data**](#Selecting-data)\n",
    "1. [**Basic computations**](#Basic-Computations)\n",
    "1. [**Advanced computations**](#Advanced-Computations)\n",
    "1. [**ENSO excercise**](#ENSO-exercise)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Xarray primer\n",
    "We've seen that [Pandas](https://pandas.pydata.org/pandas-docs/stable/) and [Geopandas](http://geopandas.org) are excellent libraries for analyzing tabular \"labeled data\". [Xarray](http://xarray.pydata.org/en/stable/) is designed to make it easier to work with with _labeled multidimensional data_. By _multidimensional data_ (also often called _N-dimensional_), we mean data with many independent dimensions or axes. For example, we might represent Earth's surface temperature $T$ as a three dimensional variable\n",
    "\n",
    "$$ T(x, y, t) $$\n",
    "\n",
    "where $x$ and $y$ are spatial dimensions and and $t$ is time. By _labeled_, we mean data that has metadata associated with it describing the names and relationships between the variables. The cartoon below shows a \"data cube\" schematic dataset with temperature and preciptation sharing the same three dimensions, plus longitude and latitude as auxilliary coordinates.\n",
    "\n",
    "![xarray data model](https://github.com/pydata/xarray/raw/master/doc/_static/dataset-diagram.png)\n",
    "\n",
    "### Xarray data structures\n",
    "\n",
    "Like Pandas, xarray has two fundamental data structures:\n",
    "* a `DataArray`, which holds a single multi-dimensional variable and its coordinates\n",
    "* a `Dataset`, which holds multiple variables that potentially share the same coordinates\n",
    "\n",
    "#### DataArray\n",
    "\n",
    "A `DataArray` has four essential attributes:\n",
    "* `values`: a `numpy.ndarray` holding the array’s values\n",
    "* `dims`: dimension names for each axis (e.g., `('x', 'y', 'z')`)\n",
    "* `coords`: a dict-like container of arrays (coordinates) that label each point (e.g., 1-dimensional arrays of numbers, datetime objects or strings)\n",
    "* `attrs`: an `OrderedDict` to hold arbitrary metadata (attributes)\n",
    "\n",
    "#### DataSet\n",
    "\n",
    "A dataset is simply an object containing multiple DataArrays indexed by variable name\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Creating data\n",
    "\n",
    "Let's start by constructing some DataArrays manually "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import xarray as xr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Numpy version:  1.18.4\n",
      "Xarray version:  0.15.1\n"
     ]
    }
   ],
   "source": [
    "print('Numpy version: ', np.__version__)\n",
    "print('Xarray version: ', xr.__version__)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we model the simple function\n",
    "\n",
    "$$f(x) = sin(x)$$\n",
    "\n",
    "on the interval $-\\pi$ to $\\pi$. We start by creating the data as numpy arrays."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "x = np.linspace(-np.pi, np.pi, 19)\n",
    "f = np.sin(x)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we are going to put this into an xarray DataArray.\n",
    "\n",
    "A simple DataArray without dimensions or coordinates isn't much use."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span>dim_0</span>: 19</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-2cf08117-cbc2-4afa-9a5d-66d522a6f8fb' class='xr-array-in' type='checkbox' ><label for='section-2cf08117-cbc2-4afa-9a5d-66d522a6f8fb' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-1.225e-16 -0.342 -0.6428 -0.866 ... 0.866 0.6428 0.342 1.225e-16</span></div><pre class='xr-array-data'>array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00,  3.42020143e-01,  6.42787610e-01,\n",
       "        8.66025404e-01,  9.84807753e-01,  9.84807753e-01,  8.66025404e-01,\n",
       "        6.42787610e-01,  3.42020143e-01,  1.22464680e-16])</pre></div></li><li class='xr-section-item'><input id='section-15959b63-cae8-4e33-9436-a1321db10765' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-15959b63-cae8-4e33-9436-a1321db10765' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-1988c7a0-9f09-4e09-ab95-8eaa8e85a460' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-1988c7a0-9f09-4e09-ab95-8eaa8e85a460' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray (dim_0: 19)>\n",
       "array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00,  3.42020143e-01,  6.42787610e-01,\n",
       "        8.66025404e-01,  9.84807753e-01,  9.84807753e-01,  8.66025404e-01,\n",
       "        6.42787610e-01,  3.42020143e-01,  1.22464680e-16])\n",
       "Dimensions without coordinates: dim_0"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "da_f = xr.DataArray(f)\n",
    "da_f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can add a dimension name..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span>x</span>: 19</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-d86dc955-7bc2-4694-a039-2c12a1889f8e' class='xr-array-in' type='checkbox' ><label for='section-d86dc955-7bc2-4694-a039-2c12a1889f8e' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-1.225e-16 -0.342 -0.6428 -0.866 ... 0.866 0.6428 0.342 1.225e-16</span></div><pre class='xr-array-data'>array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00,  3.42020143e-01,  6.42787610e-01,\n",
       "        8.66025404e-01,  9.84807753e-01,  9.84807753e-01,  8.66025404e-01,\n",
       "        6.42787610e-01,  3.42020143e-01,  1.22464680e-16])</pre></div></li><li class='xr-section-item'><input id='section-1f17ba68-a1b2-4424-aae2-37605f65e0ee' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-1f17ba68-a1b2-4424-aae2-37605f65e0ee' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-148628ce-bfe5-40fb-8c79-9acda736d0d9' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-148628ce-bfe5-40fb-8c79-9acda736d0d9' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray (x: 19)>\n",
       "array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00,  3.42020143e-01,  6.42787610e-01,\n",
       "        8.66025404e-01,  9.84807753e-01,  9.84807753e-01,  8.66025404e-01,\n",
       "        6.42787610e-01,  3.42020143e-01,  1.22464680e-16])\n",
       "Dimensions without coordinates: x"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "da_f = xr.DataArray(f, dims=['x'])\n",
    "da_f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But things get most interesting when we add a coordinate:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 19</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-2dec69b0-a80f-4785-921a-1fb532a52d7a' class='xr-array-in' type='checkbox' ><label for='section-2dec69b0-a80f-4785-921a-1fb532a52d7a' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-1.225e-16 -0.342 -0.6428 -0.866 ... 0.866 0.6428 0.342 1.225e-16</span></div><pre class='xr-array-data'>array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00,  3.42020143e-01,  6.42787610e-01,\n",
       "        8.66025404e-01,  9.84807753e-01,  9.84807753e-01,  8.66025404e-01,\n",
       "        6.42787610e-01,  3.42020143e-01,  1.22464680e-16])</pre></div></li><li class='xr-section-item'><input id='section-8fb8b522-8240-4f88-990f-f1dcc12d36c1' class='xr-section-summary-in' type='checkbox'  checked><label for='section-8fb8b522-8240-4f88-990f-f1dcc12d36c1' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.142 -2.793 ... 2.793 3.142</div><input id='attrs-e7fefa0e-7fb8-4ee9-97e5-9c88c26b7006' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-e7fefa0e-7fb8-4ee9-97e5-9c88c26b7006' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-5ab03e71-7cf1-48b3-a6e4-74ef1f1b3404' class='xr-var-data-in' type='checkbox'><label for='data-5ab03e71-7cf1-48b3-a6e4-74ef1f1b3404' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([-3.141593, -2.792527, -2.443461, -2.094395, -1.745329, -1.396263,\n",
       "       -1.047198, -0.698132, -0.349066,  0.      ,  0.349066,  0.698132,\n",
       "        1.047198,  1.396263,  1.745329,  2.094395,  2.443461,  2.792527,\n",
       "        3.141593])</pre></li></ul></div></li><li class='xr-section-item'><input id='section-78e71705-1904-4d42-b921-4c00dbf43e2e' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-78e71705-1904-4d42-b921-4c00dbf43e2e' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray (x: 19)>\n",
       "array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00,  3.42020143e-01,  6.42787610e-01,\n",
       "        8.66025404e-01,  9.84807753e-01,  9.84807753e-01,  8.66025404e-01,\n",
       "        6.42787610e-01,  3.42020143e-01,  1.22464680e-16])\n",
       "Coordinates:\n",
       "  * x        (x) float64 -3.142 -2.793 -2.443 -2.094 ... 2.094 2.443 2.793 3.142"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "da_f = xr.DataArray(f, dims=['x'], coords={'x': x})\n",
    "da_f"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Xarray has built-in plotting, like pandas."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69bff1990>]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "da_f.plot(marker='o')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Selecting Data\n",
    "\n",
    "We can always use regular numpy indexing and slicing on DataArrays to get the data back out."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-bceee733-bd87-4659-abf6-83b308687bdb' class='xr-array-in' type='checkbox' ><label for='section-bceee733-bd87-4659-abf6-83b308687bdb' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.342</span></div><pre class='xr-array-data'>array(0.34202014)</pre></div></li><li class='xr-section-item'><input id='section-a7d2b4d0-3d71-48b7-b365-6c710c2590e9' class='xr-section-summary-in' type='checkbox'  checked><label for='section-a7d2b4d0-3d71-48b7-b365-6c710c2590e9' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>x</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.3491</div><input id='attrs-45a66385-05fd-430d-a630-2bfafa3856e0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-45a66385-05fd-430d-a630-2bfafa3856e0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-3aeafa05-6c77-46af-8528-c6793f7288ff' class='xr-var-data-in' type='checkbox'><label for='data-3aeafa05-6c77-46af-8528-c6793f7288ff' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array(0.34906585)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-547608f6-f9dd-43a5-a6a2-a2501bcda8ed' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-547608f6-f9dd-43a5-a6a2-a2501bcda8ed' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray ()>\n",
       "array(0.34202014)\n",
       "Coordinates:\n",
       "    x        float64 0.3491"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get the 10th item\n",
    "da_f[10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 10</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-38fa7352-49b3-4be2-b645-9cc84ed0a848' class='xr-array-in' type='checkbox' ><label for='section-38fa7352-49b3-4be2-b645-9cc84ed0a848' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>-1.225e-16 -0.342 -0.6428 -0.866 -0.9848 ... -0.866 -0.6428 -0.342 0.0</span></div><pre class='xr-array-data'>array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00])</pre></div></li><li class='xr-section-item'><input id='section-b6cd8e10-cc48-4a72-9215-bac9a90731fa' class='xr-section-summary-in' type='checkbox'  checked><label for='section-b6cd8e10-cc48-4a72-9215-bac9a90731fa' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.142 -2.793 ... -0.3491 0.0</div><input id='attrs-4ae328c5-8be3-40c1-bbd5-e0fd6155022b' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4ae328c5-8be3-40c1-bbd5-e0fd6155022b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-4235d00c-a152-4766-ae23-8a320e29b092' class='xr-var-data-in' type='checkbox'><label for='data-4235d00c-a152-4766-ae23-8a320e29b092' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([-3.141593, -2.792527, -2.443461, -2.094395, -1.745329, -1.396263,\n",
       "       -1.047198, -0.698132, -0.349066,  0.      ])</pre></li></ul></div></li><li class='xr-section-item'><input id='section-b23b8506-9244-46a9-8326-d34675fec45f' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-b23b8506-9244-46a9-8326-d34675fec45f' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray (x: 10)>\n",
       "array([-1.22464680e-16, -3.42020143e-01, -6.42787610e-01, -8.66025404e-01,\n",
       "       -9.84807753e-01, -9.84807753e-01, -8.66025404e-01, -6.42787610e-01,\n",
       "       -3.42020143e-01,  0.00000000e+00])\n",
       "Coordinates:\n",
       "  * x        (x) float64 -3.142 -2.793 -2.443 -2.094 ... -0.6981 -0.3491 0.0"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# get the first 10 items\n",
    "da_f[:10]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "However, it is often much more powerful to use xarray's `.sel()` method to use label-based indexing. This allows us to fetch values based on the value of the coordinate, not the numerical index."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-7dfbb1ac-571d-4882-8a76-6022789749f1' class='xr-array-in' type='checkbox' ><label for='section-7dfbb1ac-571d-4882-8a76-6022789749f1' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>0.0</span></div><pre class='xr-array-data'>array(0.)</pre></div></li><li class='xr-section-item'><input id='section-13bdd17e-7d7a-45b2-8bde-f19f34846dae' class='xr-section-summary-in' type='checkbox'  checked><label for='section-13bdd17e-7d7a-45b2-8bde-f19f34846dae' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>x</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>0.0</div><input id='attrs-a49d0b3a-3c82-41b3-88cd-7e0cf7e73f5d' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-a49d0b3a-3c82-41b3-88cd-7e0cf7e73f5d' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-6a87ed9a-5693-4b80-88f9-3a4d9ff78e03' class='xr-var-data-in' type='checkbox'><label for='data-6a87ed9a-5693-4b80-88f9-3a4d9ff78e03' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array(0.)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-4cb8c31e-f510-4526-a7a5-f4049e7a6a88' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-4cb8c31e-f510-4526-a7a5-f4049e7a6a88' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray ()>\n",
       "array(0.)\n",
       "Coordinates:\n",
       "    x        float64 0.0"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "da_f.sel(x=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69be70f10>]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "da_f.sel(x=slice(0, np.pi)).plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Basic Computations\n",
    "\n",
    "When we perform mathematical manipulations of xarray DataArrays, the coordinates come along for the ride.\n",
    "Imagine we want to calcuate\n",
    "\n",
    "$$ g = f^2 + 1 $$\n",
    "\n",
    "We can apply familiar numpy operations to xarray objects.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'></div><ul class='xr-dim-list'><li><span class='xr-has-index'>x</span>: 19</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-9ed6edd3-991e-4dad-923a-dfd771926fb5' class='xr-array-in' type='checkbox' ><label for='section-9ed6edd3-991e-4dad-923a-dfd771926fb5' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>1.0 1.117 1.413 1.75 1.97 1.97 1.75 ... 1.97 1.97 1.75 1.413 1.117 1.0</span></div><pre class='xr-array-data'>array([1.        , 1.11697778, 1.41317591, 1.75      , 1.96984631,\n",
       "       1.96984631, 1.75      , 1.41317591, 1.11697778, 1.        ,\n",
       "       1.11697778, 1.41317591, 1.75      , 1.96984631, 1.96984631,\n",
       "       1.75      , 1.41317591, 1.11697778, 1.        ])</pre></div></li><li class='xr-section-item'><input id='section-2d0ffb80-d637-474f-8abd-e8a90710c139' class='xr-section-summary-in' type='checkbox'  checked><label for='section-2d0ffb80-d637-474f-8abd-e8a90710c139' class='xr-section-summary' >Coordinates: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>x</span></div><div class='xr-var-dims'>(x)</div><div class='xr-var-dtype'>float64</div><div class='xr-var-preview xr-preview'>-3.142 -2.793 ... 2.793 3.142</div><input id='attrs-ff2c1103-599d-4a96-9736-d146169ffbb0' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ff2c1103-599d-4a96-9736-d146169ffbb0' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-49b39b82-232a-4709-875f-c335d6d0b407' class='xr-var-data-in' type='checkbox'><label for='data-49b39b82-232a-4709-875f-c335d6d0b407' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([-3.141593, -2.792527, -2.443461, -2.094395, -1.745329, -1.396263,\n",
       "       -1.047198, -0.698132, -0.349066,  0.      ,  0.349066,  0.698132,\n",
       "        1.047198,  1.396263,  1.745329,  2.094395,  2.443461,  2.792527,\n",
       "        3.141593])</pre></li></ul></div></li><li class='xr-section-item'><input id='section-cd75611b-c033-4b78-b022-a7266ab42186' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-cd75611b-c033-4b78-b022-a7266ab42186' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray (x: 19)>\n",
       "array([1.        , 1.11697778, 1.41317591, 1.75      , 1.96984631,\n",
       "       1.96984631, 1.75      , 1.41317591, 1.11697778, 1.        ,\n",
       "       1.11697778, 1.41317591, 1.75      , 1.96984631, 1.96984631,\n",
       "       1.75      , 1.41317591, 1.11697778, 1.        ])\n",
       "Coordinates:\n",
       "  * x        (x) float64 -3.142 -2.793 -2.443 -2.094 ... 2.094 2.443 2.793 3.142"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "da_g = da_f**2 + 1\n",
    "da_g"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69bde8cd0>]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "da_g.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Exercise\n",
    "\n",
    "- Multipy the DataArrays `da_f` and `da_g` together.\n",
    "- Select the range $-1 < x < 1$\n",
    "- Plot the result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69bd5a590>]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(da_f * da_g).sel(x=slice(-1, 1)).plot(marker='o')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Multidimensional Data\n",
    "\n",
    "If we are just dealing with 1D data, Pandas and Xarray have very similar capabilities. Xarray's real potential comes with multidimensional data.\n",
    "\n",
    "At this point we will load data from a netCDF file into an xarray dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Cloning into 'tutorial-data'...\n"
     ]
    }
   ],
   "source": [
    "%%bash\n",
    "\n",
    "git clone https://github.com/pangeo-data/tutorial-data.git"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-5fa30217-61ef-4d0f-a51e-98ca3198660d' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-5fa30217-61ef-4d0f-a51e-98ca3198660d' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 89</li><li><span class='xr-has-index'>lon</span>: 180</li><li><span class='xr-has-index'>time</span>: 12</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-50caf15d-4ae0-4fd8-9b55-bb636ae6ca33' class='xr-section-summary-in' type='checkbox'  checked><label for='section-50caf15d-4ae0-4fd8-9b55-bb636ae6ca33' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-88.0 -86.0 -84.0 ... 86.0 88.0</div><input id='attrs-69212e25-f0e1-4569-bbde-a74b9f6456a5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-69212e25-f0e1-4569-bbde-a74b9f6456a5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-40f03822-25f1-4959-a5d4-ad79f412adf6' class='xr-var-data-in' type='checkbox'><label for='data-40f03822-25f1-4959-a5d4-ad79f412adf6' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array([-88., -86., -84., -82., -80., -78., -76., -74., -72., -70., -68., -66.,\n",
       "       -64., -62., -60., -58., -56., -54., -52., -50., -48., -46., -44., -42.,\n",
       "       -40., -38., -36., -34., -32., -30., -28., -26., -24., -22., -20., -18.,\n",
       "       -16., -14., -12., -10.,  -8.,  -6.,  -4.,  -2.,   0.,   2.,   4.,   6.,\n",
       "         8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  30.,\n",
       "        32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,\n",
       "        56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,  72.,  74.,  76.,  78.,\n",
       "        80.,  82.,  84.,  86.,  88.], dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.0 4.0 ... 354.0 356.0 358.0</div><input id='attrs-6469a981-66c5-4eec-9b71-f698892e6d78' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-6469a981-66c5-4eec-9b71-f698892e6d78' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-8ae3ea99-6b08-4784-9d01-14a458933a8b' class='xr-var-data-in' type='checkbox'><label for='data-8ae3ea99-6b08-4784-9d01-14a458933a8b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,\n",
       "        24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,\n",
       "        48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,\n",
       "        72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,\n",
       "        96.,  98., 100., 102., 104., 106., 108., 110., 112., 114., 116., 118.,\n",
       "       120., 122., 124., 126., 128., 130., 132., 134., 136., 138., 140., 142.,\n",
       "       144., 146., 148., 150., 152., 154., 156., 158., 160., 162., 164., 166.,\n",
       "       168., 170., 172., 174., 176., 178., 180., 182., 184., 186., 188., 190.,\n",
       "       192., 194., 196., 198., 200., 202., 204., 206., 208., 210., 212., 214.,\n",
       "       216., 218., 220., 222., 224., 226., 228., 230., 232., 234., 236., 238.,\n",
       "       240., 242., 244., 246., 248., 250., 252., 254., 256., 258., 260., 262.,\n",
       "       264., 266., 268., 270., 272., 274., 276., 278., 280., 282., 284., 286.,\n",
       "       288., 290., 292., 294., 296., 298., 300., 302., 304., 306., 308., 310.,\n",
       "       312., 314., 316., 318., 320., 322., 324., 326., 328., 330., 332., 334.,\n",
       "       336., 338., 340., 342., 344., 346., 348., 350., 352., 354., 356., 358.],\n",
       "      dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1960-01-15 ... 1960-12-15</div><input id='attrs-d946040c-07da-4b7b-b4e5-73384d136d07' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-d946040c-07da-4b7b-b4e5-73384d136d07' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-bacc6683-d019-400e-83b0-ce33edd88d70' class='xr-var-data-in' type='checkbox'><label for='data-bacc6683-d019-400e-83b0-ce33edd88d70' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([&#x27;1960-01-15T00:00:00.000000000&#x27;, &#x27;1960-02-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-03-15T00:00:00.000000000&#x27;, &#x27;1960-04-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-05-15T00:00:00.000000000&#x27;, &#x27;1960-06-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-07-15T00:00:00.000000000&#x27;, &#x27;1960-08-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-09-15T00:00:00.000000000&#x27;, &#x27;1960-10-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-11-15T00:00:00.000000000&#x27;, &#x27;1960-12-15T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-318bff21-3b32-4a16-a014-980e7a8f634a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-318bff21-3b32-4a16-a014-980e7a8f634a' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>sst</span></div><div class='xr-var-dims'>(time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-20e7718b-11eb-41f3-a26d-69991d794378' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-20e7718b-11eb-41f3-a26d-69991d794378' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-f8c21532-b51a-44c2-8a63-295bf921e68b' class='xr-var-data-in' type='checkbox'><label for='data-f8c21532-b51a-44c2-8a63-295bf921e68b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>pointwidth :</span></dt><dd>1.0</dd><dt><span>valid_min :</span></dt><dd>-3.0</dd><dt><span>valid_max :</span></dt><dd>45.0</dd><dt><span>units :</span></dt><dd>degree_Celsius</dd><dt><span>long_name :</span></dt><dd>Extended reconstructed sea surface temperature</dd><dt><span>standard_name :</span></dt><dd>sea_surface_temperature</dd><dt><span>iridl:hasSemantics :</span></dt><dd>iridl:SeaSurfaceTemperature</dd></dl></div><pre class='xr-var-data'>[192240 values with dtype=float32]</pre></li></ul></div></li><li class='xr-section-item'><input id='section-0c4d0533-2e4c-4cb5-bf58-9df24cdd56e7' class='xr-section-summary-in' type='checkbox'  checked><label for='section-0c4d0533-2e4c-4cb5-bf58-9df24cdd56e7' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>Conventions :</span></dt><dd>IRIDL</dd><dt><span>source :</span></dt><dd>https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/.version3b/.sst/</dd><dt><span>history :</span></dt><dd>extracted and cleaned by Ryan Abernathey for Research Computing in Earth Science</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset>\n",
       "Dimensions:  (lat: 89, lon: 180, time: 12)\n",
       "Coordinates:\n",
       "  * lat      (lat) float32 -88.0 -86.0 -84.0 -82.0 -80.0 ... 82.0 84.0 86.0 88.0\n",
       "  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0\n",
       "  * time     (time) datetime64[ns] 1960-01-15 1960-02-15 ... 1960-12-15\n",
       "Data variables:\n",
       "    sst      (time, lat, lon) float32 ...\n",
       "Attributes:\n",
       "    Conventions:  IRIDL\n",
       "    source:       https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/...\n",
       "    history:      extracted and cleaned by Ryan Abernathey for Research Compu..."
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds = xr.open_dataset('./tutorial-data/sst/NOAA_NCDC_ERSST_v3b_SST-1960.nc')\n",
    "ds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-ef1e1a23-c082-4af4-8207-8be9443fee8a' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-ef1e1a23-c082-4af4-8207-8be9443fee8a' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 89</li><li><span class='xr-has-index'>lon</span>: 180</li><li><span class='xr-has-index'>time</span>: 12</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-9ba81f2f-9a17-496c-b8b7-dba2728733fd' class='xr-section-summary-in' type='checkbox'  checked><label for='section-9ba81f2f-9a17-496c-b8b7-dba2728733fd' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-88.0 -86.0 -84.0 ... 86.0 88.0</div><input id='attrs-a824fbbe-546a-4de2-9f41-b68b35f49d98' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a824fbbe-546a-4de2-9f41-b68b35f49d98' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d4f351d5-821a-438d-96e9-c2604b24a2aa' class='xr-var-data-in' type='checkbox'><label for='data-d4f351d5-821a-438d-96e9-c2604b24a2aa' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array([-88., -86., -84., -82., -80., -78., -76., -74., -72., -70., -68., -66.,\n",
       "       -64., -62., -60., -58., -56., -54., -52., -50., -48., -46., -44., -42.,\n",
       "       -40., -38., -36., -34., -32., -30., -28., -26., -24., -22., -20., -18.,\n",
       "       -16., -14., -12., -10.,  -8.,  -6.,  -4.,  -2.,   0.,   2.,   4.,   6.,\n",
       "         8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  30.,\n",
       "        32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,\n",
       "        56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,  72.,  74.,  76.,  78.,\n",
       "        80.,  82.,  84.,  86.,  88.], dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.0 4.0 ... 354.0 356.0 358.0</div><input id='attrs-37fc9c65-32c8-41fe-92d7-a6a591e1029b' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-37fc9c65-32c8-41fe-92d7-a6a591e1029b' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-df07313a-a1f3-4d7b-8f0c-5efd89a01fbc' class='xr-var-data-in' type='checkbox'><label for='data-df07313a-a1f3-4d7b-8f0c-5efd89a01fbc' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,\n",
       "        24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,\n",
       "        48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,\n",
       "        72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,\n",
       "        96.,  98., 100., 102., 104., 106., 108., 110., 112., 114., 116., 118.,\n",
       "       120., 122., 124., 126., 128., 130., 132., 134., 136., 138., 140., 142.,\n",
       "       144., 146., 148., 150., 152., 154., 156., 158., 160., 162., 164., 166.,\n",
       "       168., 170., 172., 174., 176., 178., 180., 182., 184., 186., 188., 190.,\n",
       "       192., 194., 196., 198., 200., 202., 204., 206., 208., 210., 212., 214.,\n",
       "       216., 218., 220., 222., 224., 226., 228., 230., 232., 234., 236., 238.,\n",
       "       240., 242., 244., 246., 248., 250., 252., 254., 256., 258., 260., 262.,\n",
       "       264., 266., 268., 270., 272., 274., 276., 278., 280., 282., 284., 286.,\n",
       "       288., 290., 292., 294., 296., 298., 300., 302., 304., 306., 308., 310.,\n",
       "       312., 314., 316., 318., 320., 322., 324., 326., 328., 330., 332., 334.,\n",
       "       336., 338., 340., 342., 344., 346., 348., 350., 352., 354., 356., 358.],\n",
       "      dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1960-01-15 ... 1960-12-15</div><input id='attrs-ca8fc5bc-644e-4678-8624-e085cb8eb803' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-ca8fc5bc-644e-4678-8624-e085cb8eb803' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-a535b06d-178a-448c-9053-9e56cfc9dcdb' class='xr-var-data-in' type='checkbox'><label for='data-a535b06d-178a-448c-9053-9e56cfc9dcdb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([&#x27;1960-01-15T00:00:00.000000000&#x27;, &#x27;1960-02-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-03-15T00:00:00.000000000&#x27;, &#x27;1960-04-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-05-15T00:00:00.000000000&#x27;, &#x27;1960-06-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-07-15T00:00:00.000000000&#x27;, &#x27;1960-08-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-09-15T00:00:00.000000000&#x27;, &#x27;1960-10-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-11-15T00:00:00.000000000&#x27;, &#x27;1960-12-15T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-1c12c039-1a43-4232-869f-a46e6049cd4a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-1c12c039-1a43-4232-869f-a46e6049cd4a' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>sst</span></div><div class='xr-var-dims'>(time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>...</div><input id='attrs-53eaca96-8e0f-4034-9ecb-dbda862837f9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-53eaca96-8e0f-4034-9ecb-dbda862837f9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-66fc82de-700c-41c3-b64f-ac6fa6a9c536' class='xr-var-data-in' type='checkbox'><label for='data-66fc82de-700c-41c3-b64f-ac6fa6a9c536' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>pointwidth :</span></dt><dd>1.0</dd><dt><span>valid_min :</span></dt><dd>-3.0</dd><dt><span>valid_max :</span></dt><dd>45.0</dd><dt><span>units :</span></dt><dd>degree_Celsius</dd><dt><span>long_name :</span></dt><dd>Extended reconstructed sea surface temperature</dd><dt><span>standard_name :</span></dt><dd>sea_surface_temperature</dd><dt><span>iridl:hasSemantics :</span></dt><dd>iridl:SeaSurfaceTemperature</dd></dl></div><pre class='xr-var-data'>[192240 values with dtype=float32]</pre></li></ul></div></li><li class='xr-section-item'><input id='section-be1cefa0-6ed2-454c-b31b-e3b91e120488' class='xr-section-summary-in' type='checkbox'  checked><label for='section-be1cefa0-6ed2-454c-b31b-e3b91e120488' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>Conventions :</span></dt><dd>IRIDL</dd><dt><span>source :</span></dt><dd>https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/.version3b/.sst/</dd><dt><span>history :</span></dt><dd>extracted and cleaned by Ryan Abernathey for Research Computing in Earth Science</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset>\n",
       "Dimensions:  (lat: 89, lon: 180, time: 12)\n",
       "Coordinates:\n",
       "  * lat      (lat) float32 -88.0 -86.0 -84.0 -82.0 -80.0 ... 82.0 84.0 86.0 88.0\n",
       "  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0\n",
       "  * time     (time) datetime64[ns] 1960-01-15 1960-02-15 ... 1960-12-15\n",
       "Data variables:\n",
       "    sst      (time, lat, lon) float32 ...\n",
       "Attributes:\n",
       "    Conventions:  IRIDL\n",
       "    source:       https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/...\n",
       "    history:      extracted and cleaned by Ryan Abernathey for Research Compu..."
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Xarray > v0.14.1 has a new HTML output type!\n",
    "xr.set_options(display_style=\"html\")\n",
    "ds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'sst'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 12</li><li><span class='xr-has-index'>lat</span>: 89</li><li><span class='xr-has-index'>lon</span>: 180</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-2ebc4734-e1ea-4ad4-96f4-9da568a7eb49' class='xr-array-in' type='checkbox' ><label for='section-2ebc4734-e1ea-4ad4-96f4-9da568a7eb49' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>...</span></div><pre class='xr-array-data'>[192240 values with dtype=float32]</pre></div></li><li class='xr-section-item'><input id='section-92736fcd-9814-43ad-8f3f-7359f99cdee9' class='xr-section-summary-in' type='checkbox'  checked><label for='section-92736fcd-9814-43ad-8f3f-7359f99cdee9' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-88.0 -86.0 -84.0 ... 86.0 88.0</div><input id='attrs-d14decf2-5165-49bb-8ae1-36e78fed1b12' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d14decf2-5165-49bb-8ae1-36e78fed1b12' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b7267925-b36d-4a8b-bf23-48be78e4b55c' class='xr-var-data-in' type='checkbox'><label for='data-b7267925-b36d-4a8b-bf23-48be78e4b55c' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array([-88., -86., -84., -82., -80., -78., -76., -74., -72., -70., -68., -66.,\n",
       "       -64., -62., -60., -58., -56., -54., -52., -50., -48., -46., -44., -42.,\n",
       "       -40., -38., -36., -34., -32., -30., -28., -26., -24., -22., -20., -18.,\n",
       "       -16., -14., -12., -10.,  -8.,  -6.,  -4.,  -2.,   0.,   2.,   4.,   6.,\n",
       "         8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  30.,\n",
       "        32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,\n",
       "        56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,  72.,  74.,  76.,  78.,\n",
       "        80.,  82.,  84.,  86.,  88.], dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.0 4.0 ... 354.0 356.0 358.0</div><input id='attrs-bb791b6d-e814-4d39-ad0a-ec0944a8f5d3' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-bb791b6d-e814-4d39-ad0a-ec0944a8f5d3' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-452a8f01-1e2e-400c-9103-e448fa9c0e3b' class='xr-var-data-in' type='checkbox'><label for='data-452a8f01-1e2e-400c-9103-e448fa9c0e3b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,\n",
       "        24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,\n",
       "        48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,\n",
       "        72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,\n",
       "        96.,  98., 100., 102., 104., 106., 108., 110., 112., 114., 116., 118.,\n",
       "       120., 122., 124., 126., 128., 130., 132., 134., 136., 138., 140., 142.,\n",
       "       144., 146., 148., 150., 152., 154., 156., 158., 160., 162., 164., 166.,\n",
       "       168., 170., 172., 174., 176., 178., 180., 182., 184., 186., 188., 190.,\n",
       "       192., 194., 196., 198., 200., 202., 204., 206., 208., 210., 212., 214.,\n",
       "       216., 218., 220., 222., 224., 226., 228., 230., 232., 234., 236., 238.,\n",
       "       240., 242., 244., 246., 248., 250., 252., 254., 256., 258., 260., 262.,\n",
       "       264., 266., 268., 270., 272., 274., 276., 278., 280., 282., 284., 286.,\n",
       "       288., 290., 292., 294., 296., 298., 300., 302., 304., 306., 308., 310.,\n",
       "       312., 314., 316., 318., 320., 322., 324., 326., 328., 330., 332., 334.,\n",
       "       336., 338., 340., 342., 344., 346., 348., 350., 352., 354., 356., 358.],\n",
       "      dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1960-01-15 ... 1960-12-15</div><input id='attrs-4653c60a-ef20-4147-a715-502fc5cb4c0a' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4653c60a-ef20-4147-a715-502fc5cb4c0a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-9c01be1a-37ea-4f5b-9235-74ab97b6acad' class='xr-var-data-in' type='checkbox'><label for='data-9c01be1a-37ea-4f5b-9235-74ab97b6acad' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([&#x27;1960-01-15T00:00:00.000000000&#x27;, &#x27;1960-02-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-03-15T00:00:00.000000000&#x27;, &#x27;1960-04-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-05-15T00:00:00.000000000&#x27;, &#x27;1960-06-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-07-15T00:00:00.000000000&#x27;, &#x27;1960-08-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-09-15T00:00:00.000000000&#x27;, &#x27;1960-10-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-11-15T00:00:00.000000000&#x27;, &#x27;1960-12-15T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-3411d8f2-da3f-4313-b263-69c70ba9b80a' class='xr-section-summary-in' type='checkbox'  checked><label for='section-3411d8f2-da3f-4313-b263-69c70ba9b80a' class='xr-section-summary' >Attributes: <span>(7)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>pointwidth :</span></dt><dd>1.0</dd><dt><span>valid_min :</span></dt><dd>-3.0</dd><dt><span>valid_max :</span></dt><dd>45.0</dd><dt><span>units :</span></dt><dd>degree_Celsius</dd><dt><span>long_name :</span></dt><dd>Extended reconstructed sea surface temperature</dd><dt><span>standard_name :</span></dt><dd>sea_surface_temperature</dd><dt><span>iridl:hasSemantics :</span></dt><dd>iridl:SeaSurfaceTemperature</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'sst' (time: 12, lat: 89, lon: 180)>\n",
       "[192240 values with dtype=float32]\n",
       "Coordinates:\n",
       "  * lat      (lat) float32 -88.0 -86.0 -84.0 -82.0 -80.0 ... 82.0 84.0 86.0 88.0\n",
       "  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0\n",
       "  * time     (time) datetime64[ns] 1960-01-15 1960-02-15 ... 1960-12-15\n",
       "Attributes:\n",
       "    pointwidth:          1.0\n",
       "    valid_min:           -3.0\n",
       "    valid_max:           45.0\n",
       "    units:               degree_Celsius\n",
       "    long_name:           Extended reconstructed sea surface temperature\n",
       "    standard_name:       sea_surface_temperature\n",
       "    iridl:hasSemantics:  iridl:SeaSurfaceTemperature"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# both do the exact same thing\n",
    "\n",
    "# dictionary syntax\n",
    "sst = ds['sst']\n",
    "\n",
    "# attribute syntax\n",
    "sst = ds.sst\n",
    "\n",
    "sst"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Multidimensional Indexing\n",
    "\n",
    "In this example, we take advantage of the fact that xarray understands time to select a particular date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7fc69b0ffd10>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst.sel(time='1960-06-15').plot(vmin=-2, vmax=30)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "But we can select along any axis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7fc69b0c9ed0>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst.sel(lon=180).transpose().plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69af6c250>]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst.sel(lon=180, lat=40).plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Label-Based Reduction Operations\n",
    "\n",
    "Usually the process of data analysis involves going from a big, multidimensional dataset to a few concise figures.\n",
    "Inevitably, the data must be \"reduced\" somehow. Examples of simple reduction operations include:\n",
    "\n",
    "- Mean\n",
    "- Standard Deviation\n",
    "- Minimum\n",
    "- Maximum\n",
    "\n",
    "etc. Xarray supports all of these and more, via a familiar numpy-like syntax. But with xarray, you can specify the reductions by dimension.\n",
    "\n",
    "First we start with the default, reduction over all dimensions:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'sst'</div></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-f218b6d8-67e2-4acd-8a61-e2eef66a0ab5' class='xr-array-in' type='checkbox' ><label for='section-f218b6d8-67e2-4acd-8a61-e2eef66a0ab5' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>13.626506</span></div><pre class='xr-array-data'>array(13.626506, dtype=float32)</pre></div></li><li class='xr-section-item'><input id='section-b46ff84e-e866-4c4c-8154-a1186ae8a6c8' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-b46ff84e-e866-4c4c-8154-a1186ae8a6c8' class='xr-section-summary'  title='Expand/collapse section'>Coordinates: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'></ul></div></li><li class='xr-section-item'><input id='section-05afa812-cdd8-411d-9ba1-6e976f44aced' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-05afa812-cdd8-411d-9ba1-6e976f44aced' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'sst' ()>\n",
       "array(13.626506, dtype=float32)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sst.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/envs/notebook/lib/python3.7/site-packages/xarray/core/nanops.py:142: RuntimeWarning: Mean of empty slice\n",
      "  return np.nanmean(a, axis=axis, dtype=dtype)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7fc69ae94f10>"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst_time_mean = sst.mean(dim='time')\n",
    "sst_time_mean.plot(vmin=-2, vmax=30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7fc69aee1050>"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst_zonal_mean = sst.mean(dim='lon')\n",
    "sst_zonal_mean.transpose().plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69be2a150>]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst_time_and_zonal_mean = sst.mean(dim=('time', 'lon'))\n",
    "sst_time_and_zonal_mean.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69aee1fd0>]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# some might prefer to have lat on the y axis\n",
    "sst_time_and_zonal_mean.plot(y='lat')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### More Complicated Example: Weighted Mean\n",
    "\n",
    "The means we calculated above were \"naive\"; they were straightforward numerical means over the different dimensions of the dataset. They did not account, for example, for spherical geometry of the globe and the necessary weighting factors. Although xarray is very useful for geospatial analysis, **it has no built-in understanding of geography**.\n",
    "\n",
    "Below we show how to create a proper weighted mean by using the formula for the area element in spherical coordinates. This is a good illustration of several xarray concepts.\n",
    "\n",
    "The [area element for lat-lon coordinates](https://en.wikipedia.org/wiki/Spherical_coordinate_system#Integration_and_differentiation_in_spherical_coordinates) is\n",
    "\n",
    "$$ \\delta A = R^2 \\delta \\phi \\delta \\lambda \\cos(\\phi) $$\n",
    "\n",
    "where $\\phi$ is latitude, $\\delta \\phi$ is the spacing of the points in latitude, $\\delta \\lambda$ is the spacing of the points in longitude, and $R$ is Earth's radius. (In this formula, $\\phi$ and $\\lambda$ are measured in radians.) Let's use xarray to create the weight factor."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69ac60cd0>]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "R = 6.37e6\n",
    "# we know already that the spacing of the points is one degree latitude\n",
    "dϕ = np.deg2rad(1.)\n",
    "dλ = np.deg2rad(1.)\n",
    "dA = R**2 * dϕ * dλ * np.cos(np.deg2rad(ds.lat))\n",
    "dA.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'lat'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 89</li><li><span class='xr-has-index'>lon</span>: 180</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-a09808fb-b884-4ff6-86fb-1a6d9ea52636' class='xr-array-in' type='checkbox' ><label for='section-a09808fb-b884-4ff6-86fb-1a6d9ea52636' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>nan nan nan nan ... 431372740.0 431372740.0 431372740.0 431372740.0</span></div><pre class='xr-array-data'>array([[          nan,           nan,           nan, ...,           nan,\n",
       "                  nan,           nan],\n",
       "       [          nan,           nan,           nan, ...,           nan,\n",
       "                  nan,           nan],\n",
       "       [          nan,           nan,           nan, ...,           nan,\n",
       "                  nan,           nan],\n",
       "       ...,\n",
       "       [1.2920163e+09, 1.2920163e+09, 1.2920163e+09, ..., 1.2920163e+09,\n",
       "        1.2920163e+09, 1.2920163e+09],\n",
       "       [8.6222048e+08, 8.6222048e+08, 8.6222048e+08, ..., 8.6222048e+08,\n",
       "        8.6222048e+08, 8.6222048e+08],\n",
       "       [4.3137274e+08, 4.3137274e+08, 4.3137274e+08, ..., 4.3137274e+08,\n",
       "        4.3137274e+08, 4.3137274e+08]], dtype=float32)</pre></div></li><li class='xr-section-item'><input id='section-d5f1c232-55af-4a3d-b332-6ea912d681ee' class='xr-section-summary-in' type='checkbox'  checked><label for='section-d5f1c232-55af-4a3d-b332-6ea912d681ee' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-88.0 -86.0 -84.0 ... 86.0 88.0</div><input id='attrs-7f59a621-5b08-4b97-9d2f-11281067a82f' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-7f59a621-5b08-4b97-9d2f-11281067a82f' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-e21c4345-5424-4913-8915-8018beb27a9f' class='xr-var-data-in' type='checkbox'><label for='data-e21c4345-5424-4913-8915-8018beb27a9f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array([-88., -86., -84., -82., -80., -78., -76., -74., -72., -70., -68., -66.,\n",
       "       -64., -62., -60., -58., -56., -54., -52., -50., -48., -46., -44., -42.,\n",
       "       -40., -38., -36., -34., -32., -30., -28., -26., -24., -22., -20., -18.,\n",
       "       -16., -14., -12., -10.,  -8.,  -6.,  -4.,  -2.,   0.,   2.,   4.,   6.,\n",
       "         8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  30.,\n",
       "        32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,\n",
       "        56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,  72.,  74.,  76.,  78.,\n",
       "        80.,  82.,  84.,  86.,  88.], dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.0 4.0 ... 354.0 356.0 358.0</div><input id='attrs-a907a1f8-87fa-4ac8-9d93-ae29f74e9137' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-a907a1f8-87fa-4ac8-9d93-ae29f74e9137' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b8eb7948-29fe-4356-b4d5-cf8c190739eb' class='xr-var-data-in' type='checkbox'><label for='data-b8eb7948-29fe-4356-b4d5-cf8c190739eb' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,\n",
       "        24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,\n",
       "        48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,\n",
       "        72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,\n",
       "        96.,  98., 100., 102., 104., 106., 108., 110., 112., 114., 116., 118.,\n",
       "       120., 122., 124., 126., 128., 130., 132., 134., 136., 138., 140., 142.,\n",
       "       144., 146., 148., 150., 152., 154., 156., 158., 160., 162., 164., 166.,\n",
       "       168., 170., 172., 174., 176., 178., 180., 182., 184., 186., 188., 190.,\n",
       "       192., 194., 196., 198., 200., 202., 204., 206., 208., 210., 212., 214.,\n",
       "       216., 218., 220., 222., 224., 226., 228., 230., 232., 234., 236., 238.,\n",
       "       240., 242., 244., 246., 248., 250., 252., 254., 256., 258., 260., 262.,\n",
       "       264., 266., 268., 270., 272., 274., 276., 278., 280., 282., 284., 286.,\n",
       "       288., 290., 292., 294., 296., 298., 300., 302., 304., 306., 308., 310.,\n",
       "       312., 314., 316., 318., 320., 322., 324., 326., 328., 330., 332., 334.,\n",
       "       336., 338., 340., 342., 344., 346., 348., 350., 352., 354., 356., 358.],\n",
       "      dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span>time</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1960-01-15</div><input id='attrs-152bef39-2781-4d18-aae0-9a27dcd4a4de' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-152bef39-2781-4d18-aae0-9a27dcd4a4de' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-2334a6c0-79c3-423e-918c-2d44fad3685e' class='xr-var-data-in' type='checkbox'><label for='data-2334a6c0-79c3-423e-918c-2d44fad3685e' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array(&#x27;1960-01-15T00:00:00.000000000&#x27;, dtype=&#x27;datetime64[ns]&#x27;)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-b836727a-8a31-4eb0-8e4d-7ba590e8892b' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-b836727a-8a31-4eb0-8e4d-7ba590e8892b' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'lat' (lat: 89, lon: 180)>\n",
       "array([[          nan,           nan,           nan, ...,           nan,\n",
       "                  nan,           nan],\n",
       "       [          nan,           nan,           nan, ...,           nan,\n",
       "                  nan,           nan],\n",
       "       [          nan,           nan,           nan, ...,           nan,\n",
       "                  nan,           nan],\n",
       "       ...,\n",
       "       [1.2920163e+09, 1.2920163e+09, 1.2920163e+09, ..., 1.2920163e+09,\n",
       "        1.2920163e+09, 1.2920163e+09],\n",
       "       [8.6222048e+08, 8.6222048e+08, 8.6222048e+08, ..., 8.6222048e+08,\n",
       "        8.6222048e+08, 8.6222048e+08],\n",
       "       [4.3137274e+08, 4.3137274e+08, 4.3137274e+08, ..., 4.3137274e+08,\n",
       "        4.3137274e+08, 4.3137274e+08]], dtype=float32)\n",
       "Coordinates:\n",
       "  * lat      (lat) float32 -88.0 -86.0 -84.0 -82.0 -80.0 ... 82.0 84.0 86.0 88.0\n",
       "  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0\n",
       "    time     datetime64[ns] 1960-01-15"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dA.where(sst[0].notnull())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7fc69ac23190>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "pixel_area = dA.where(sst[0].notnull())\n",
    "pixel_area.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69ad11150>]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "total_ocean_area = pixel_area.sum(dim=('lon', 'lat'))\n",
    "sst_weighted_mean = (sst * pixel_area).sum(dim=('lon', 'lat')) / total_ocean_area\n",
    "sst_weighted_mean.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Maps\n",
    "\n",
    "Xarray integrates with cartopy to enable you to plot your data on a map"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.QuadMesh at 0x7fc6949a3f90>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/envs/notebook/lib/python3.7/site-packages/cartopy/io/__init__.py:260: DownloadWarning: Downloading: http://naciscdn.org/naturalearth/110m/physical/ne_110m_coastline.zip\n",
      "  warnings.warn('Downloading: {}'.format(url), DownloadWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import cartopy.crs as ccrs\n",
    "\n",
    "plt.figure(figsize=(12, 8))\n",
    "ax = plt.axes(projection=ccrs.InterruptedGoodeHomolosine())\n",
    "ax.coastlines()\n",
    "\n",
    "sst[0].plot(transform=ccrs.PlateCarree(), vmin=-2, vmax=30,\n",
    "            cbar_kwargs={'shrink': 0.4})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## IV. Opening Many Files\n",
    "\n",
    "One of the killer features of xarray is its ability to open many files into a single dataset. We do this with the `open_mfdataset` function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.Dataset</div></div><ul class='xr-sections'><li class='xr-section-item'><input id='section-fcf86a6c-d1bc-4903-9385-7119f679fa8c' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-fcf86a6c-d1bc-4903-9385-7119f679fa8c' class='xr-section-summary'  title='Expand/collapse section'>Dimensions:</label><div class='xr-section-inline-details'><ul class='xr-dim-list'><li><span class='xr-has-index'>lat</span>: 89</li><li><span class='xr-has-index'>lon</span>: 180</li><li><span class='xr-has-index'>time</span>: 684</li></ul></div><div class='xr-section-details'></div></li><li class='xr-section-item'><input id='section-87b4d77a-27e5-4803-a0e0-37503c31a40d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-87b4d77a-27e5-4803-a0e0-37503c31a40d' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.0 4.0 ... 354.0 356.0 358.0</div><input id='attrs-e29d5e10-8bb4-4b80-992f-31dc1c628e0a' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-e29d5e10-8bb4-4b80-992f-31dc1c628e0a' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d93e10f7-b0cb-4899-aa78-b703db8a0666' class='xr-var-data-in' type='checkbox'><label for='data-d93e10f7-b0cb-4899-aa78-b703db8a0666' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,\n",
       "        24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,\n",
       "        48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,\n",
       "        72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,\n",
       "        96.,  98., 100., 102., 104., 106., 108., 110., 112., 114., 116., 118.,\n",
       "       120., 122., 124., 126., 128., 130., 132., 134., 136., 138., 140., 142.,\n",
       "       144., 146., 148., 150., 152., 154., 156., 158., 160., 162., 164., 166.,\n",
       "       168., 170., 172., 174., 176., 178., 180., 182., 184., 186., 188., 190.,\n",
       "       192., 194., 196., 198., 200., 202., 204., 206., 208., 210., 212., 214.,\n",
       "       216., 218., 220., 222., 224., 226., 228., 230., 232., 234., 236., 238.,\n",
       "       240., 242., 244., 246., 248., 250., 252., 254., 256., 258., 260., 262.,\n",
       "       264., 266., 268., 270., 272., 274., 276., 278., 280., 282., 284., 286.,\n",
       "       288., 290., 292., 294., 296., 298., 300., 302., 304., 306., 308., 310.,\n",
       "       312., 314., 316., 318., 320., 322., 324., 326., 328., 330., 332., 334.,\n",
       "       336., 338., 340., 342., 344., 346., 348., 350., 352., 354., 356., 358.],\n",
       "      dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-88.0 -86.0 -84.0 ... 86.0 88.0</div><input id='attrs-d47b443a-2e92-4b58-b4cf-159c421c8281' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-d47b443a-2e92-4b58-b4cf-159c421c8281' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-b37d274d-ed1a-46ae-a2d8-ea2311b7a6d4' class='xr-var-data-in' type='checkbox'><label for='data-b37d274d-ed1a-46ae-a2d8-ea2311b7a6d4' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array([-88., -86., -84., -82., -80., -78., -76., -74., -72., -70., -68., -66.,\n",
       "       -64., -62., -60., -58., -56., -54., -52., -50., -48., -46., -44., -42.,\n",
       "       -40., -38., -36., -34., -32., -30., -28., -26., -24., -22., -20., -18.,\n",
       "       -16., -14., -12., -10.,  -8.,  -6.,  -4.,  -2.,   0.,   2.,   4.,   6.,\n",
       "         8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  30.,\n",
       "        32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,\n",
       "        56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,  72.,  74.,  76.,  78.,\n",
       "        80.,  82.,  84.,  86.,  88.], dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1960-01-15 ... 2016-12-15</div><input id='attrs-1f1cf8ca-01de-44ad-bbf9-1917ee6aa6ce' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-1f1cf8ca-01de-44ad-bbf9-1917ee6aa6ce' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-978f0c89-1c77-4729-b286-e0e059c09649' class='xr-var-data-in' type='checkbox'><label for='data-978f0c89-1c77-4729-b286-e0e059c09649' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([&#x27;1960-01-15T00:00:00.000000000&#x27;, &#x27;1960-02-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;1960-03-15T00:00:00.000000000&#x27;, ..., &#x27;2016-10-15T00:00:00.000000000&#x27;,\n",
       "       &#x27;2016-11-15T00:00:00.000000000&#x27;, &#x27;2016-12-15T00:00:00.000000000&#x27;],\n",
       "      dtype=&#x27;datetime64[ns]&#x27;)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-6643096a-d57d-4cf7-9204-b251e236b556' class='xr-section-summary-in' type='checkbox'  checked><label for='section-6643096a-d57d-4cf7-9204-b251e236b556' class='xr-section-summary' >Data variables: <span>(1)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span>sst</span></div><div class='xr-var-dims'>(time, lat, lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>dask.array&lt;chunksize=(12, 89, 180), meta=np.ndarray&gt;</div><input id='attrs-c5bc626e-8717-40cd-9550-426cc62883b9' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-c5bc626e-8717-40cd-9550-426cc62883b9' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-cb5a98a4-3af1-4ff1-aea5-4449fe37d6a3' class='xr-var-data-in' type='checkbox'><label for='data-cb5a98a4-3af1-4ff1-aea5-4449fe37d6a3' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>pointwidth :</span></dt><dd>1.0</dd><dt><span>valid_min :</span></dt><dd>-3.0</dd><dt><span>valid_max :</span></dt><dd>45.0</dd><dt><span>units :</span></dt><dd>degree_Celsius</dd><dt><span>long_name :</span></dt><dd>Extended reconstructed sea surface temperature</dd><dt><span>standard_name :</span></dt><dd>sea_surface_temperature</dd><dt><span>iridl:hasSemantics :</span></dt><dd>iridl:SeaSurfaceTemperature</dd></dl></div><pre class='xr-var-data'><table>\n",
       "<tr>\n",
       "<td>\n",
       "<table>\n",
       "  <thead>\n",
       "    <tr><td> </td><th> Array </th><th> Chunk </th></tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr><th> Bytes </th><td> 43.83 MB </td> <td> 768.96 kB </td></tr>\n",
       "    <tr><th> Shape </th><td> (684, 89, 180) </td> <td> (12, 89, 180) </td></tr>\n",
       "    <tr><th> Count </th><td> 171 Tasks </td><td> 57 Chunks </td></tr>\n",
       "    <tr><th> Type </th><td> float32 </td><td> numpy.ndarray </td></tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</td>\n",
       "<td>\n",
       "<svg width=\"173\" height=\"160\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"40\" x2=\"80\" y2=\"110\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"40\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"11\" y1=\"1\" x2=\"11\" y2=\"41\" />\n",
       "  <line x1=\"12\" y1=\"2\" x2=\"12\" y2=\"42\" />\n",
       "  <line x1=\"13\" y1=\"3\" x2=\"13\" y2=\"43\" />\n",
       "  <line x1=\"14\" y1=\"4\" x2=\"14\" y2=\"44\" />\n",
       "  <line x1=\"16\" y1=\"6\" x2=\"16\" y2=\"46\" />\n",
       "  <line x1=\"17\" y1=\"7\" x2=\"17\" y2=\"47\" />\n",
       "  <line x1=\"18\" y1=\"8\" x2=\"18\" y2=\"48\" />\n",
       "  <line x1=\"19\" y1=\"9\" x2=\"19\" y2=\"49\" />\n",
       "  <line x1=\"21\" y1=\"11\" x2=\"21\" y2=\"51\" />\n",
       "  <line x1=\"22\" y1=\"12\" x2=\"22\" y2=\"52\" />\n",
       "  <line x1=\"23\" y1=\"13\" x2=\"23\" y2=\"53\" />\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"24\" y2=\"54\" />\n",
       "  <line x1=\"26\" y1=\"16\" x2=\"26\" y2=\"56\" />\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"27\" y2=\"57\" />\n",
       "  <line x1=\"28\" y1=\"18\" x2=\"28\" y2=\"58\" />\n",
       "  <line x1=\"29\" y1=\"19\" x2=\"29\" y2=\"59\" />\n",
       "  <line x1=\"31\" y1=\"21\" x2=\"31\" y2=\"61\" />\n",
       "  <line x1=\"32\" y1=\"22\" x2=\"32\" y2=\"62\" />\n",
       "  <line x1=\"33\" y1=\"23\" x2=\"33\" y2=\"63\" />\n",
       "  <line x1=\"34\" y1=\"24\" x2=\"34\" y2=\"64\" />\n",
       "  <line x1=\"36\" y1=\"26\" x2=\"36\" y2=\"66\" />\n",
       "  <line x1=\"37\" y1=\"27\" x2=\"37\" y2=\"67\" />\n",
       "  <line x1=\"38\" y1=\"28\" x2=\"38\" y2=\"68\" />\n",
       "  <line x1=\"39\" y1=\"29\" x2=\"39\" y2=\"69\" />\n",
       "  <line x1=\"40\" y1=\"30\" x2=\"40\" y2=\"70\" />\n",
       "  <line x1=\"42\" y1=\"32\" x2=\"42\" y2=\"72\" />\n",
       "  <line x1=\"43\" y1=\"33\" x2=\"43\" y2=\"73\" />\n",
       "  <line x1=\"44\" y1=\"34\" x2=\"44\" y2=\"74\" />\n",
       "  <line x1=\"45\" y1=\"35\" x2=\"45\" y2=\"75\" />\n",
       "  <line x1=\"47\" y1=\"37\" x2=\"47\" y2=\"77\" />\n",
       "  <line x1=\"48\" y1=\"38\" x2=\"48\" y2=\"78\" />\n",
       "  <line x1=\"49\" y1=\"39\" x2=\"49\" y2=\"79\" />\n",
       "  <line x1=\"50\" y1=\"40\" x2=\"50\" y2=\"80\" />\n",
       "  <line x1=\"52\" y1=\"42\" x2=\"52\" y2=\"82\" />\n",
       "  <line x1=\"53\" y1=\"43\" x2=\"53\" y2=\"83\" />\n",
       "  <line x1=\"54\" y1=\"44\" x2=\"54\" y2=\"84\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"55\" y2=\"85\" />\n",
       "  <line x1=\"57\" y1=\"47\" x2=\"57\" y2=\"87\" />\n",
       "  <line x1=\"58\" y1=\"48\" x2=\"58\" y2=\"88\" />\n",
       "  <line x1=\"59\" y1=\"49\" x2=\"59\" y2=\"89\" />\n",
       "  <line x1=\"60\" y1=\"50\" x2=\"60\" y2=\"90\" />\n",
       "  <line x1=\"62\" y1=\"52\" x2=\"62\" y2=\"92\" />\n",
       "  <line x1=\"63\" y1=\"53\" x2=\"63\" y2=\"93\" />\n",
       "  <line x1=\"64\" y1=\"54\" x2=\"64\" y2=\"94\" />\n",
       "  <line x1=\"65\" y1=\"55\" x2=\"65\" y2=\"95\" />\n",
       "  <line x1=\"66\" y1=\"56\" x2=\"66\" y2=\"96\" />\n",
       "  <line x1=\"68\" y1=\"58\" x2=\"68\" y2=\"98\" />\n",
       "  <line x1=\"69\" y1=\"59\" x2=\"69\" y2=\"99\" />\n",
       "  <line x1=\"70\" y1=\"60\" x2=\"70\" y2=\"100\" />\n",
       "  <line x1=\"71\" y1=\"61\" x2=\"71\" y2=\"101\" />\n",
       "  <line x1=\"73\" y1=\"63\" x2=\"73\" y2=\"103\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"74\" y2=\"104\" />\n",
       "  <line x1=\"75\" y1=\"65\" x2=\"75\" y2=\"105\" />\n",
       "  <line x1=\"76\" y1=\"66\" x2=\"76\" y2=\"106\" />\n",
       "  <line x1=\"78\" y1=\"68\" x2=\"78\" y2=\"108\" />\n",
       "  <line x1=\"79\" y1=\"69\" x2=\"79\" y2=\"109\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"110\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.000000,0.000000 80.588235,70.588235 80.588235,110.588331 10.000000,40.000095\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"53\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"11\" y1=\"1\" x2=\"54\" y2=\"1\" />\n",
       "  <line x1=\"12\" y1=\"2\" x2=\"55\" y2=\"2\" />\n",
       "  <line x1=\"13\" y1=\"3\" x2=\"56\" y2=\"3\" />\n",
       "  <line x1=\"14\" y1=\"4\" x2=\"58\" y2=\"4\" />\n",
       "  <line x1=\"16\" y1=\"6\" x2=\"59\" y2=\"6\" />\n",
       "  <line x1=\"17\" y1=\"7\" x2=\"60\" y2=\"7\" />\n",
       "  <line x1=\"18\" y1=\"8\" x2=\"61\" y2=\"8\" />\n",
       "  <line x1=\"19\" y1=\"9\" x2=\"62\" y2=\"9\" />\n",
       "  <line x1=\"21\" y1=\"11\" x2=\"64\" y2=\"11\" />\n",
       "  <line x1=\"22\" y1=\"12\" x2=\"65\" y2=\"12\" />\n",
       "  <line x1=\"23\" y1=\"13\" x2=\"66\" y2=\"13\" />\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"67\" y2=\"14\" />\n",
       "  <line x1=\"26\" y1=\"16\" x2=\"69\" y2=\"16\" />\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"70\" y2=\"17\" />\n",
       "  <line x1=\"28\" y1=\"18\" x2=\"71\" y2=\"18\" />\n",
       "  <line x1=\"29\" y1=\"19\" x2=\"72\" y2=\"19\" />\n",
       "  <line x1=\"31\" y1=\"21\" x2=\"74\" y2=\"21\" />\n",
       "  <line x1=\"32\" y1=\"22\" x2=\"75\" y2=\"22\" />\n",
       "  <line x1=\"33\" y1=\"23\" x2=\"76\" y2=\"23\" />\n",
       "  <line x1=\"34\" y1=\"24\" x2=\"77\" y2=\"24\" />\n",
       "  <line x1=\"36\" y1=\"26\" x2=\"79\" y2=\"26\" />\n",
       "  <line x1=\"37\" y1=\"27\" x2=\"80\" y2=\"27\" />\n",
       "  <line x1=\"38\" y1=\"28\" x2=\"81\" y2=\"28\" />\n",
       "  <line x1=\"39\" y1=\"29\" x2=\"82\" y2=\"29\" />\n",
       "  <line x1=\"40\" y1=\"30\" x2=\"84\" y2=\"30\" />\n",
       "  <line x1=\"42\" y1=\"32\" x2=\"85\" y2=\"32\" />\n",
       "  <line x1=\"43\" y1=\"33\" x2=\"86\" y2=\"33\" />\n",
       "  <line x1=\"44\" y1=\"34\" x2=\"87\" y2=\"34\" />\n",
       "  <line x1=\"45\" y1=\"35\" x2=\"89\" y2=\"35\" />\n",
       "  <line x1=\"47\" y1=\"37\" x2=\"90\" y2=\"37\" />\n",
       "  <line x1=\"48\" y1=\"38\" x2=\"91\" y2=\"38\" />\n",
       "  <line x1=\"49\" y1=\"39\" x2=\"92\" y2=\"39\" />\n",
       "  <line x1=\"50\" y1=\"40\" x2=\"93\" y2=\"40\" />\n",
       "  <line x1=\"52\" y1=\"42\" x2=\"95\" y2=\"42\" />\n",
       "  <line x1=\"53\" y1=\"43\" x2=\"96\" y2=\"43\" />\n",
       "  <line x1=\"54\" y1=\"44\" x2=\"97\" y2=\"44\" />\n",
       "  <line x1=\"55\" y1=\"45\" x2=\"98\" y2=\"45\" />\n",
       "  <line x1=\"57\" y1=\"47\" x2=\"100\" y2=\"47\" />\n",
       "  <line x1=\"58\" y1=\"48\" x2=\"101\" y2=\"48\" />\n",
       "  <line x1=\"59\" y1=\"49\" x2=\"102\" y2=\"49\" />\n",
       "  <line x1=\"60\" y1=\"50\" x2=\"103\" y2=\"50\" />\n",
       "  <line x1=\"62\" y1=\"52\" x2=\"105\" y2=\"52\" />\n",
       "  <line x1=\"63\" y1=\"53\" x2=\"106\" y2=\"53\" />\n",
       "  <line x1=\"64\" y1=\"54\" x2=\"107\" y2=\"54\" />\n",
       "  <line x1=\"65\" y1=\"55\" x2=\"108\" y2=\"55\" />\n",
       "  <line x1=\"66\" y1=\"56\" x2=\"110\" y2=\"56\" />\n",
       "  <line x1=\"68\" y1=\"58\" x2=\"111\" y2=\"58\" />\n",
       "  <line x1=\"69\" y1=\"59\" x2=\"112\" y2=\"59\" />\n",
       "  <line x1=\"70\" y1=\"60\" x2=\"113\" y2=\"60\" />\n",
       "  <line x1=\"71\" y1=\"61\" x2=\"115\" y2=\"61\" />\n",
       "  <line x1=\"73\" y1=\"63\" x2=\"116\" y2=\"63\" />\n",
       "  <line x1=\"74\" y1=\"64\" x2=\"117\" y2=\"64\" />\n",
       "  <line x1=\"75\" y1=\"65\" x2=\"118\" y2=\"65\" />\n",
       "  <line x1=\"76\" y1=\"66\" x2=\"119\" y2=\"66\" />\n",
       "  <line x1=\"78\" y1=\"68\" x2=\"121\" y2=\"68\" />\n",
       "  <line x1=\"79\" y1=\"69\" x2=\"122\" y2=\"69\" />\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"123\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"80\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"53\" y1=\"0\" x2=\"123\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.000000,0.000000 53.087797,0.000000 123.676033,70.588235 80.588235,70.588235\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"123\" y2=\"70\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"80\" y1=\"110\" x2=\"123\" y2=\"110\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"80\" y1=\"70\" x2=\"80\" y2=\"110\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"123\" y1=\"70\" x2=\"123\" y2=\"110\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"80.588235,70.588235 123.676033,70.588235 123.676033,110.588331 80.588235,110.588331\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"102.132134\" y=\"130.588331\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >180</text>\n",
       "  <text x=\"143.676033\" y=\"90.588283\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,143.676033,90.588283)\">89</text>\n",
       "  <text x=\"35.294118\" y=\"95.294213\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,35.294118,95.294213)\">684</text>\n",
       "</svg>\n",
       "</td>\n",
       "</tr>\n",
       "</table></pre></li></ul></div></li><li class='xr-section-item'><input id='section-02066a03-47dc-4fec-8dd1-c0e0b63aa08b' class='xr-section-summary-in' type='checkbox'  checked><label for='section-02066a03-47dc-4fec-8dd1-c0e0b63aa08b' class='xr-section-summary' >Attributes: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'><dt><span>Conventions :</span></dt><dd>IRIDL</dd><dt><span>source :</span></dt><dd>https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/.version3b/.sst/</dd><dt><span>history :</span></dt><dd>extracted and cleaned by Ryan Abernathey for Research Computing in Earth Science</dd></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.Dataset>\n",
       "Dimensions:  (lat: 89, lon: 180, time: 684)\n",
       "Coordinates:\n",
       "  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0\n",
       "  * lat      (lat) float32 -88.0 -86.0 -84.0 -82.0 -80.0 ... 82.0 84.0 86.0 88.0\n",
       "  * time     (time) datetime64[ns] 1960-01-15 1960-02-15 ... 2016-12-15\n",
       "Data variables:\n",
       "    sst      (time, lat, lon) float32 dask.array<chunksize=(12, 89, 180), meta=np.ndarray>\n",
       "Attributes:\n",
       "    Conventions:  IRIDL\n",
       "    source:       https://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCDC/.ERSST/...\n",
       "    history:      extracted and cleaned by Ryan Abernathey for Research Compu..."
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds_all = xr.open_mfdataset('./tutorial-data/sst/*nc', combine='by_coords')\n",
    "ds_all"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we have 57 years of data instead of one!"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## V. Groupby\n",
    "\n",
    "Now that we have a bigger dataset, this is a good time to check out xarray's groupby capabilities."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'sst'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>month</span>: 12</li><li><span class='xr-has-index'>lat</span>: 89</li><li><span class='xr-has-index'>lon</span>: 180</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-20d4f53f-3b77-4b76-b949-00a388a63318' class='xr-array-in' type='checkbox' ><label for='section-20d4f53f-3b77-4b76-b949-00a388a63318' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(1, 89, 180), meta=np.ndarray&gt;</span></div><pre class='xr-array-data'><table>\n",
       "<tr>\n",
       "<td>\n",
       "<table>\n",
       "  <thead>\n",
       "    <tr><td> </td><th> Array </th><th> Chunk </th></tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr><th> Bytes </th><td> 768.96 kB </td> <td> 64.08 kB </td></tr>\n",
       "    <tr><th> Shape </th><td> (12, 89, 180) </td> <td> (1, 89, 180) </td></tr>\n",
       "    <tr><th> Count </th><td> 1791 Tasks </td><td> 12 Chunks </td></tr>\n",
       "    <tr><th> Type </th><td> float32 </td><td> numpy.ndarray </td></tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</td>\n",
       "<td>\n",
       "<svg width=\"201\" height=\"130\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"31\" y2=\"21\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"10\" y1=\"59\" x2=\"31\" y2=\"80\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"59\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"11\" y1=\"1\" x2=\"11\" y2=\"61\" />\n",
       "  <line x1=\"13\" y1=\"3\" x2=\"13\" y2=\"62\" />\n",
       "  <line x1=\"15\" y1=\"5\" x2=\"15\" y2=\"64\" />\n",
       "  <line x1=\"17\" y1=\"7\" x2=\"17\" y2=\"66\" />\n",
       "  <line x1=\"18\" y1=\"8\" x2=\"18\" y2=\"68\" />\n",
       "  <line x1=\"20\" y1=\"10\" x2=\"20\" y2=\"69\" />\n",
       "  <line x1=\"22\" y1=\"12\" x2=\"22\" y2=\"71\" />\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"24\" y2=\"73\" />\n",
       "  <line x1=\"25\" y1=\"15\" x2=\"25\" y2=\"75\" />\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"27\" y2=\"77\" />\n",
       "  <line x1=\"29\" y1=\"19\" x2=\"29\" y2=\"78\" />\n",
       "  <line x1=\"31\" y1=\"21\" x2=\"31\" y2=\"80\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.000000,0.000000 31.322253,21.322253 31.322253,80.655586 10.000000,59.333333\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"130\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"11\" y1=\"1\" x2=\"131\" y2=\"1\" />\n",
       "  <line x1=\"13\" y1=\"3\" x2=\"133\" y2=\"3\" />\n",
       "  <line x1=\"15\" y1=\"5\" x2=\"135\" y2=\"5\" />\n",
       "  <line x1=\"17\" y1=\"7\" x2=\"137\" y2=\"7\" />\n",
       "  <line x1=\"18\" y1=\"8\" x2=\"138\" y2=\"8\" />\n",
       "  <line x1=\"20\" y1=\"10\" x2=\"140\" y2=\"10\" />\n",
       "  <line x1=\"22\" y1=\"12\" x2=\"142\" y2=\"12\" />\n",
       "  <line x1=\"24\" y1=\"14\" x2=\"144\" y2=\"14\" />\n",
       "  <line x1=\"25\" y1=\"15\" x2=\"145\" y2=\"15\" />\n",
       "  <line x1=\"27\" y1=\"17\" x2=\"147\" y2=\"17\" />\n",
       "  <line x1=\"29\" y1=\"19\" x2=\"149\" y2=\"19\" />\n",
       "  <line x1=\"31\" y1=\"21\" x2=\"151\" y2=\"21\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"31\" y2=\"21\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"130\" y1=\"0\" x2=\"151\" y2=\"21\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"10.000000,0.000000 130.000000,0.000000 151.322253,21.322253 31.322253,21.322253\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"31\" y1=\"21\" x2=\"151\" y2=\"21\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"31\" y1=\"80\" x2=\"151\" y2=\"80\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"31\" y1=\"21\" x2=\"31\" y2=\"80\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"151\" y1=\"21\" x2=\"151\" y2=\"80\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"31.322253,21.322253 151.322253,21.322253 151.322253,80.655586 31.322253,80.655586\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"91.322253\" y=\"100.655586\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >180</text>\n",
       "  <text x=\"171.322253\" y=\"50.988920\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,171.322253,50.988920)\">89</text>\n",
       "  <text x=\"10.661126\" y=\"89.994460\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(45,10.661126,89.994460)\">12</text>\n",
       "</svg>\n",
       "</td>\n",
       "</tr>\n",
       "</table></pre></div></li><li class='xr-section-item'><input id='section-04e25ab9-42cc-4634-83d7-8cb4466aeb9e' class='xr-section-summary-in' type='checkbox'  checked><label for='section-04e25ab9-42cc-4634-83d7-8cb4466aeb9e' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lon</span></div><div class='xr-var-dims'>(lon)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>0.0 2.0 4.0 ... 354.0 356.0 358.0</div><input id='attrs-f7af1f96-1001-49eb-80b1-524037e90b05' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-f7af1f96-1001-49eb-80b1-524037e90b05' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-08fd035b-bc9c-4baf-97e4-c860747d1c50' class='xr-var-data-in' type='checkbox'><label for='data-08fd035b-bc9c-4baf-97e4-c860747d1c50' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array([  0.,   2.,   4.,   6.,   8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,\n",
       "        24.,  26.,  28.,  30.,  32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,\n",
       "        48.,  50.,  52.,  54.,  56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,\n",
       "        72.,  74.,  76.,  78.,  80.,  82.,  84.,  86.,  88.,  90.,  92.,  94.,\n",
       "        96.,  98., 100., 102., 104., 106., 108., 110., 112., 114., 116., 118.,\n",
       "       120., 122., 124., 126., 128., 130., 132., 134., 136., 138., 140., 142.,\n",
       "       144., 146., 148., 150., 152., 154., 156., 158., 160., 162., 164., 166.,\n",
       "       168., 170., 172., 174., 176., 178., 180., 182., 184., 186., 188., 190.,\n",
       "       192., 194., 196., 198., 200., 202., 204., 206., 208., 210., 212., 214.,\n",
       "       216., 218., 220., 222., 224., 226., 228., 230., 232., 234., 236., 238.,\n",
       "       240., 242., 244., 246., 248., 250., 252., 254., 256., 258., 260., 262.,\n",
       "       264., 266., 268., 270., 272., 274., 276., 278., 280., 282., 284., 286.,\n",
       "       288., 290., 292., 294., 296., 298., 300., 302., 304., 306., 308., 310.,\n",
       "       312., 314., 316., 318., 320., 322., 324., 326., 328., 330., 332., 334.,\n",
       "       336., 338., 340., 342., 344., 346., 348., 350., 352., 354., 356., 358.],\n",
       "      dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>lat</span></div><div class='xr-var-dims'>(lat)</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>-88.0 -86.0 -84.0 ... 86.0 88.0</div><input id='attrs-fa3cbd55-e29b-4ec9-8573-fbcbc5ab2bd4' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-fa3cbd55-e29b-4ec9-8573-fbcbc5ab2bd4' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-d498c61f-e922-4b0a-bfb0-6198ad80acba' class='xr-var-data-in' type='checkbox'><label for='data-d498c61f-e922-4b0a-bfb0-6198ad80acba' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array([-88., -86., -84., -82., -80., -78., -76., -74., -72., -70., -68., -66.,\n",
       "       -64., -62., -60., -58., -56., -54., -52., -50., -48., -46., -44., -42.,\n",
       "       -40., -38., -36., -34., -32., -30., -28., -26., -24., -22., -20., -18.,\n",
       "       -16., -14., -12., -10.,  -8.,  -6.,  -4.,  -2.,   0.,   2.,   4.,   6.,\n",
       "         8.,  10.,  12.,  14.,  16.,  18.,  20.,  22.,  24.,  26.,  28.,  30.,\n",
       "        32.,  34.,  36.,  38.,  40.,  42.,  44.,  46.,  48.,  50.,  52.,  54.,\n",
       "        56.,  58.,  60.,  62.,  64.,  66.,  68.,  70.,  72.,  74.,  76.,  78.,\n",
       "        80.,  82.,  84.,  86.,  88.], dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>month</span></div><div class='xr-var-dims'>(month)</div><div class='xr-var-dtype'>int64</div><div class='xr-var-preview xr-preview'>1 2 3 4 5 6 7 8 9 10 11 12</div><input id='attrs-4801ff71-1428-471b-bde7-56723f710a32' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-4801ff71-1428-471b-bde7-56723f710a32' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-61aa925c-2891-4091-a22a-ce26f14e6919' class='xr-var-data-in' type='checkbox'><label for='data-61aa925c-2891-4091-a22a-ce26f14e6919' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12])</pre></li></ul></div></li><li class='xr-section-item'><input id='section-02d06f00-44d9-4d49-9598-a252392602f6' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-02d06f00-44d9-4d49-9598-a252392602f6' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'sst' (month: 12, lat: 89, lon: 180)>\n",
       "dask.array<stack, shape=(12, 89, 180), dtype=float32, chunksize=(1, 89, 180), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * lon      (lon) float32 0.0 2.0 4.0 6.0 8.0 ... 350.0 352.0 354.0 356.0 358.0\n",
       "  * lat      (lat) float32 -88.0 -86.0 -84.0 -82.0 -80.0 ... 82.0 84.0 86.0 88.0\n",
       "  * month    (month) int64 1 2 3 4 5 6 7 8 9 10 11 12"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sst_clim = ds_all.sst.groupby('time.month').mean(dim='time')\n",
    "sst_clim"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now the data has dimension `month` instead of time!\n",
    "Each value represents the average among all of the Januaries, Februaries, etc. in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/envs/notebook/lib/python3.7/site-packages/dask/array/numpy_compat.py:40: RuntimeWarning: invalid value encountered in true_divide\n",
      "  x = np.divide(x1, x2, out)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'June minus July SST Climatology')"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "(sst_clim[6] - sst_clim[0]).plot()\n",
    "plt.title('June minus July SST Climatology')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## VI. Resample and Rolling\n",
    "\n",
    "Resample is meant specifically to work with time data (data with a `datetime64` variable as a dimension).\n",
    "It allows you to change the time-sampling frequency of your data.\n",
    "\n",
    "Let's illustrate by selecting a single point."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div><svg style=\"position: absolute; width: 0; height: 0; overflow: hidden\">\n",
       "<defs>\n",
       "<symbol id=\"icon-database\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide data repr</title>\n",
       "<path d=\"M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z\"></path>\n",
       "<path d=\"M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "<path d=\"M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z\"></path>\n",
       "</symbol>\n",
       "<symbol id=\"icon-file-text2\" viewBox=\"0 0 32 32\">\n",
       "<title>Show/Hide attributes</title>\n",
       "<path d=\"M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z\"></path>\n",
       "<path d=\"M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "<path d=\"M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z\"></path>\n",
       "</symbol>\n",
       "</defs>\n",
       "</svg>\n",
       "<style>/* CSS stylesheet for displaying xarray objects in jupyterlab.\n",
       " *\n",
       " */\n",
       "\n",
       ":root {\n",
       "  --xr-font-color0: var(--jp-content-font-color0, rgba(0, 0, 0, 1));\n",
       "  --xr-font-color2: var(--jp-content-font-color2, rgba(0, 0, 0, 0.54));\n",
       "  --xr-font-color3: var(--jp-content-font-color3, rgba(0, 0, 0, 0.38));\n",
       "  --xr-border-color: var(--jp-border-color2, #e0e0e0);\n",
       "  --xr-disabled-color: var(--jp-layout-color3, #bdbdbd);\n",
       "  --xr-background-color: var(--jp-layout-color0, white);\n",
       "  --xr-background-color-row-even: var(--jp-layout-color1, white);\n",
       "  --xr-background-color-row-odd: var(--jp-layout-color2, #eeeeee);\n",
       "}\n",
       "\n",
       ".xr-wrap {\n",
       "  min-width: 300px;\n",
       "  max-width: 700px;\n",
       "}\n",
       "\n",
       ".xr-header {\n",
       "  padding-top: 6px;\n",
       "  padding-bottom: 6px;\n",
       "  margin-bottom: 4px;\n",
       "  border-bottom: solid 1px var(--xr-border-color);\n",
       "}\n",
       "\n",
       ".xr-header > div,\n",
       ".xr-header > ul {\n",
       "  display: inline;\n",
       "  margin-top: 0;\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-obj-type,\n",
       ".xr-array-name {\n",
       "  margin-left: 2px;\n",
       "  margin-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-obj-type {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-sections {\n",
       "  padding-left: 0 !important;\n",
       "  display: grid;\n",
       "  grid-template-columns: 150px auto auto 1fr 20px 20px;\n",
       "}\n",
       "\n",
       ".xr-section-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-section-item input {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-item input + label {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label {\n",
       "  cursor: pointer;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-item input:enabled + label:hover {\n",
       "  color: var(--xr-font-color0);\n",
       "}\n",
       "\n",
       ".xr-section-summary {\n",
       "  grid-column: 1;\n",
       "  color: var(--xr-font-color2);\n",
       "  font-weight: 500;\n",
       "}\n",
       "\n",
       ".xr-section-summary > span {\n",
       "  display: inline-block;\n",
       "  padding-left: 0.5em;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label {\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in + label:before {\n",
       "  display: inline-block;\n",
       "  content: '►';\n",
       "  font-size: 11px;\n",
       "  width: 15px;\n",
       "  text-align: center;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:disabled + label:before {\n",
       "  color: var(--xr-disabled-color);\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label:before {\n",
       "  content: '▼';\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked + label > span {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-section-summary,\n",
       ".xr-section-inline-details {\n",
       "  padding-top: 4px;\n",
       "  padding-bottom: 4px;\n",
       "}\n",
       "\n",
       ".xr-section-inline-details {\n",
       "  grid-column: 2 / -1;\n",
       "}\n",
       "\n",
       ".xr-section-details {\n",
       "  display: none;\n",
       "  grid-column: 1 / -1;\n",
       "  margin-bottom: 5px;\n",
       "}\n",
       "\n",
       ".xr-section-summary-in:checked ~ .xr-section-details {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-array-wrap {\n",
       "  grid-column: 1 / -1;\n",
       "  display: grid;\n",
       "  grid-template-columns: 20px auto;\n",
       "}\n",
       "\n",
       ".xr-array-wrap > label {\n",
       "  grid-column: 1;\n",
       "  vertical-align: top;\n",
       "}\n",
       "\n",
       ".xr-preview {\n",
       "  color: var(--xr-font-color3);\n",
       "}\n",
       "\n",
       ".xr-array-preview,\n",
       ".xr-array-data {\n",
       "  padding: 0 5px !important;\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-array-data,\n",
       ".xr-array-in:checked ~ .xr-array-preview {\n",
       "  display: none;\n",
       "}\n",
       "\n",
       ".xr-array-in:checked ~ .xr-array-data,\n",
       ".xr-array-preview {\n",
       "  display: inline-block;\n",
       "}\n",
       "\n",
       ".xr-dim-list {\n",
       "  display: inline-block !important;\n",
       "  list-style: none;\n",
       "  padding: 0 !important;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list li {\n",
       "  display: inline-block;\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "}\n",
       "\n",
       ".xr-dim-list:before {\n",
       "  content: '(';\n",
       "}\n",
       "\n",
       ".xr-dim-list:after {\n",
       "  content: ')';\n",
       "}\n",
       "\n",
       ".xr-dim-list li:not(:last-child):after {\n",
       "  content: ',';\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-has-index {\n",
       "  font-weight: bold;\n",
       "}\n",
       "\n",
       ".xr-var-list,\n",
       ".xr-var-item {\n",
       "  display: contents;\n",
       "}\n",
       "\n",
       ".xr-var-item > div,\n",
       ".xr-var-item label,\n",
       ".xr-var-item > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-even);\n",
       "  margin-bottom: 0;\n",
       "}\n",
       "\n",
       ".xr-var-item > .xr-var-name:hover span {\n",
       "  padding-right: 5px;\n",
       "}\n",
       "\n",
       ".xr-var-list > li:nth-child(odd) > div,\n",
       ".xr-var-list > li:nth-child(odd) > label,\n",
       ".xr-var-list > li:nth-child(odd) > .xr-var-name span {\n",
       "  background-color: var(--xr-background-color-row-odd);\n",
       "}\n",
       "\n",
       ".xr-var-name {\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-var-dims {\n",
       "  grid-column: 2;\n",
       "}\n",
       "\n",
       ".xr-var-dtype {\n",
       "  grid-column: 3;\n",
       "  text-align: right;\n",
       "  color: var(--xr-font-color2);\n",
       "}\n",
       "\n",
       ".xr-var-preview {\n",
       "  grid-column: 4;\n",
       "}\n",
       "\n",
       ".xr-var-name,\n",
       ".xr-var-dims,\n",
       ".xr-var-dtype,\n",
       ".xr-preview,\n",
       ".xr-attrs dt {\n",
       "  white-space: nowrap;\n",
       "  overflow: hidden;\n",
       "  text-overflow: ellipsis;\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-var-name:hover,\n",
       ".xr-var-dims:hover,\n",
       ".xr-var-dtype:hover,\n",
       ".xr-attrs dt:hover {\n",
       "  overflow: visible;\n",
       "  width: auto;\n",
       "  z-index: 1;\n",
       "}\n",
       "\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  display: none;\n",
       "  background-color: var(--xr-background-color) !important;\n",
       "  padding-bottom: 5px !important;\n",
       "}\n",
       "\n",
       ".xr-var-attrs-in:checked ~ .xr-var-attrs,\n",
       ".xr-var-data-in:checked ~ .xr-var-data {\n",
       "  display: block;\n",
       "}\n",
       "\n",
       ".xr-var-data > table {\n",
       "  float: right;\n",
       "}\n",
       "\n",
       ".xr-var-name span,\n",
       ".xr-var-data,\n",
       ".xr-attrs {\n",
       "  padding-left: 25px !important;\n",
       "}\n",
       "\n",
       ".xr-attrs,\n",
       ".xr-var-attrs,\n",
       ".xr-var-data {\n",
       "  grid-column: 1 / -1;\n",
       "}\n",
       "\n",
       "dl.xr-attrs {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  display: grid;\n",
       "  grid-template-columns: 125px auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt, dd {\n",
       "  padding: 0;\n",
       "  margin: 0;\n",
       "  float: left;\n",
       "  padding-right: 10px;\n",
       "  width: auto;\n",
       "}\n",
       "\n",
       ".xr-attrs dt {\n",
       "  font-weight: normal;\n",
       "  grid-column: 1;\n",
       "}\n",
       "\n",
       ".xr-attrs dt:hover span {\n",
       "  display: inline-block;\n",
       "  background: var(--xr-background-color);\n",
       "  padding-right: 10px;\n",
       "}\n",
       "\n",
       ".xr-attrs dd {\n",
       "  grid-column: 2;\n",
       "  white-space: pre-wrap;\n",
       "  word-break: break-all;\n",
       "}\n",
       "\n",
       ".xr-icon-database,\n",
       ".xr-icon-file-text2 {\n",
       "  display: inline-block;\n",
       "  vertical-align: middle;\n",
       "  width: 1em;\n",
       "  height: 1.5em !important;\n",
       "  stroke-width: 0;\n",
       "  stroke: currentColor;\n",
       "  fill: currentColor;\n",
       "}\n",
       "</style><div class='xr-wrap'><div class='xr-header'><div class='xr-obj-type'>xarray.DataArray</div><div class='xr-array-name'>'sst'</div><ul class='xr-dim-list'><li><span class='xr-has-index'>time</span>: 57</li></ul></div><ul class='xr-sections'><li class='xr-section-item'><div class='xr-array-wrap'><input id='section-da8de419-60f1-438c-92af-3e874c32275c' class='xr-array-in' type='checkbox' ><label for='section-da8de419-60f1-438c-92af-3e874c32275c' title='Show/hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-array-preview xr-preview'><span>dask.array&lt;chunksize=(1,), meta=np.ndarray&gt;</span></div><pre class='xr-array-data'><table>\n",
       "<tr>\n",
       "<td>\n",
       "<table>\n",
       "  <thead>\n",
       "    <tr><td> </td><th> Array </th><th> Chunk </th></tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr><th> Bytes </th><td> 228 B </td> <td> 4 B </td></tr>\n",
       "    <tr><th> Shape </th><td> (57,) </td> <td> (1,) </td></tr>\n",
       "    <tr><th> Count </th><td> 456 Tasks </td><td> 57 Chunks </td></tr>\n",
       "    <tr><th> Type </th><td> float32 </td><td> numpy.ndarray </td></tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</td>\n",
       "<td>\n",
       "<svg width=\"170\" height=\"78\" style=\"stroke:rgb(0,0,0);stroke-width:1\" >\n",
       "\n",
       "  <!-- Horizontal lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"120\" y2=\"0\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"0\" y1=\"28\" x2=\"120\" y2=\"28\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Vertical lines -->\n",
       "  <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"28\" style=\"stroke-width:2\" />\n",
       "  <line x1=\"2\" y1=\"0\" x2=\"2\" y2=\"28\" />\n",
       "  <line x1=\"4\" y1=\"0\" x2=\"4\" y2=\"28\" />\n",
       "  <line x1=\"6\" y1=\"0\" x2=\"6\" y2=\"28\" />\n",
       "  <line x1=\"8\" y1=\"0\" x2=\"8\" y2=\"28\" />\n",
       "  <line x1=\"10\" y1=\"0\" x2=\"10\" y2=\"28\" />\n",
       "  <line x1=\"12\" y1=\"0\" x2=\"12\" y2=\"28\" />\n",
       "  <line x1=\"14\" y1=\"0\" x2=\"14\" y2=\"28\" />\n",
       "  <line x1=\"16\" y1=\"0\" x2=\"16\" y2=\"28\" />\n",
       "  <line x1=\"18\" y1=\"0\" x2=\"18\" y2=\"28\" />\n",
       "  <line x1=\"21\" y1=\"0\" x2=\"21\" y2=\"28\" />\n",
       "  <line x1=\"23\" y1=\"0\" x2=\"23\" y2=\"28\" />\n",
       "  <line x1=\"25\" y1=\"0\" x2=\"25\" y2=\"28\" />\n",
       "  <line x1=\"27\" y1=\"0\" x2=\"27\" y2=\"28\" />\n",
       "  <line x1=\"29\" y1=\"0\" x2=\"29\" y2=\"28\" />\n",
       "  <line x1=\"31\" y1=\"0\" x2=\"31\" y2=\"28\" />\n",
       "  <line x1=\"33\" y1=\"0\" x2=\"33\" y2=\"28\" />\n",
       "  <line x1=\"35\" y1=\"0\" x2=\"35\" y2=\"28\" />\n",
       "  <line x1=\"37\" y1=\"0\" x2=\"37\" y2=\"28\" />\n",
       "  <line x1=\"40\" y1=\"0\" x2=\"40\" y2=\"28\" />\n",
       "  <line x1=\"42\" y1=\"0\" x2=\"42\" y2=\"28\" />\n",
       "  <line x1=\"44\" y1=\"0\" x2=\"44\" y2=\"28\" />\n",
       "  <line x1=\"46\" y1=\"0\" x2=\"46\" y2=\"28\" />\n",
       "  <line x1=\"48\" y1=\"0\" x2=\"48\" y2=\"28\" />\n",
       "  <line x1=\"50\" y1=\"0\" x2=\"50\" y2=\"28\" />\n",
       "  <line x1=\"52\" y1=\"0\" x2=\"52\" y2=\"28\" />\n",
       "  <line x1=\"54\" y1=\"0\" x2=\"54\" y2=\"28\" />\n",
       "  <line x1=\"56\" y1=\"0\" x2=\"56\" y2=\"28\" />\n",
       "  <line x1=\"58\" y1=\"0\" x2=\"58\" y2=\"28\" />\n",
       "  <line x1=\"61\" y1=\"0\" x2=\"61\" y2=\"28\" />\n",
       "  <line x1=\"63\" y1=\"0\" x2=\"63\" y2=\"28\" />\n",
       "  <line x1=\"65\" y1=\"0\" x2=\"65\" y2=\"28\" />\n",
       "  <line x1=\"67\" y1=\"0\" x2=\"67\" y2=\"28\" />\n",
       "  <line x1=\"69\" y1=\"0\" x2=\"69\" y2=\"28\" />\n",
       "  <line x1=\"71\" y1=\"0\" x2=\"71\" y2=\"28\" />\n",
       "  <line x1=\"73\" y1=\"0\" x2=\"73\" y2=\"28\" />\n",
       "  <line x1=\"75\" y1=\"0\" x2=\"75\" y2=\"28\" />\n",
       "  <line x1=\"77\" y1=\"0\" x2=\"77\" y2=\"28\" />\n",
       "  <line x1=\"80\" y1=\"0\" x2=\"80\" y2=\"28\" />\n",
       "  <line x1=\"82\" y1=\"0\" x2=\"82\" y2=\"28\" />\n",
       "  <line x1=\"84\" y1=\"0\" x2=\"84\" y2=\"28\" />\n",
       "  <line x1=\"86\" y1=\"0\" x2=\"86\" y2=\"28\" />\n",
       "  <line x1=\"88\" y1=\"0\" x2=\"88\" y2=\"28\" />\n",
       "  <line x1=\"90\" y1=\"0\" x2=\"90\" y2=\"28\" />\n",
       "  <line x1=\"92\" y1=\"0\" x2=\"92\" y2=\"28\" />\n",
       "  <line x1=\"94\" y1=\"0\" x2=\"94\" y2=\"28\" />\n",
       "  <line x1=\"96\" y1=\"0\" x2=\"96\" y2=\"28\" />\n",
       "  <line x1=\"98\" y1=\"0\" x2=\"98\" y2=\"28\" />\n",
       "  <line x1=\"101\" y1=\"0\" x2=\"101\" y2=\"28\" />\n",
       "  <line x1=\"103\" y1=\"0\" x2=\"103\" y2=\"28\" />\n",
       "  <line x1=\"105\" y1=\"0\" x2=\"105\" y2=\"28\" />\n",
       "  <line x1=\"107\" y1=\"0\" x2=\"107\" y2=\"28\" />\n",
       "  <line x1=\"109\" y1=\"0\" x2=\"109\" y2=\"28\" />\n",
       "  <line x1=\"111\" y1=\"0\" x2=\"111\" y2=\"28\" />\n",
       "  <line x1=\"113\" y1=\"0\" x2=\"113\" y2=\"28\" />\n",
       "  <line x1=\"115\" y1=\"0\" x2=\"115\" y2=\"28\" />\n",
       "  <line x1=\"117\" y1=\"0\" x2=\"117\" y2=\"28\" />\n",
       "  <line x1=\"120\" y1=\"0\" x2=\"120\" y2=\"28\" style=\"stroke-width:2\" />\n",
       "\n",
       "  <!-- Colored Rectangle -->\n",
       "  <polygon points=\"0.000000,0.000000 120.000000,0.000000 120.000000,28.302642 0.000000,28.302642\" style=\"fill:#ECB172A0;stroke-width:0\"/>\n",
       "\n",
       "  <!-- Text -->\n",
       "  <text x=\"60.000000\" y=\"48.302642\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" >57</text>\n",
       "  <text x=\"140.000000\" y=\"14.151321\" font-size=\"1.0rem\" font-weight=\"100\" text-anchor=\"middle\" transform=\"rotate(0,140.000000,14.151321)\">1</text>\n",
       "</svg>\n",
       "</td>\n",
       "</tr>\n",
       "</table></pre></div></li><li class='xr-section-item'><input id='section-4ef5958d-288d-4407-97e9-352ba5d4790d' class='xr-section-summary-in' type='checkbox'  checked><label for='section-4ef5958d-288d-4407-97e9-352ba5d4790d' class='xr-section-summary' >Coordinates: <span>(3)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><ul class='xr-var-list'><li class='xr-var-item'><div class='xr-var-name'><span class='xr-has-index'>time</span></div><div class='xr-var-dims'>(time)</div><div class='xr-var-dtype'>datetime64[ns]</div><div class='xr-var-preview xr-preview'>1960-12-31 ... 2016-12-31</div><input id='attrs-92030d1a-ad47-40be-899e-fa9a469af3fe' class='xr-var-attrs-in' type='checkbox' disabled><label for='attrs-92030d1a-ad47-40be-899e-fa9a469af3fe' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-1e5dafc6-0273-4712-9cfc-449421fc5d9b' class='xr-var-data-in' type='checkbox'><label for='data-1e5dafc6-0273-4712-9cfc-449421fc5d9b' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'></dl></div><pre class='xr-var-data'>array([&#x27;1960-12-31T00:00:00.000000000&#x27;, &#x27;1961-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1962-12-31T00:00:00.000000000&#x27;, &#x27;1963-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1964-12-31T00:00:00.000000000&#x27;, &#x27;1965-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1966-12-31T00:00:00.000000000&#x27;, &#x27;1967-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1968-12-31T00:00:00.000000000&#x27;, &#x27;1969-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1970-12-31T00:00:00.000000000&#x27;, &#x27;1971-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1972-12-31T00:00:00.000000000&#x27;, &#x27;1973-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1974-12-31T00:00:00.000000000&#x27;, &#x27;1975-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1976-12-31T00:00:00.000000000&#x27;, &#x27;1977-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1978-12-31T00:00:00.000000000&#x27;, &#x27;1979-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1980-12-31T00:00:00.000000000&#x27;, &#x27;1981-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1982-12-31T00:00:00.000000000&#x27;, &#x27;1983-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1984-12-31T00:00:00.000000000&#x27;, &#x27;1985-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1986-12-31T00:00:00.000000000&#x27;, &#x27;1987-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1988-12-31T00:00:00.000000000&#x27;, &#x27;1989-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1990-12-31T00:00:00.000000000&#x27;, &#x27;1991-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1992-12-31T00:00:00.000000000&#x27;, &#x27;1993-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1994-12-31T00:00:00.000000000&#x27;, &#x27;1995-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1996-12-31T00:00:00.000000000&#x27;, &#x27;1997-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;1998-12-31T00:00:00.000000000&#x27;, &#x27;1999-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2000-12-31T00:00:00.000000000&#x27;, &#x27;2001-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2002-12-31T00:00:00.000000000&#x27;, &#x27;2003-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2004-12-31T00:00:00.000000000&#x27;, &#x27;2005-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2006-12-31T00:00:00.000000000&#x27;, &#x27;2007-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2008-12-31T00:00:00.000000000&#x27;, &#x27;2009-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2010-12-31T00:00:00.000000000&#x27;, &#x27;2011-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2012-12-31T00:00:00.000000000&#x27;, &#x27;2013-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2014-12-31T00:00:00.000000000&#x27;, &#x27;2015-12-31T00:00:00.000000000&#x27;,\n",
       "       &#x27;2016-12-31T00:00:00.000000000&#x27;], dtype=&#x27;datetime64[ns]&#x27;)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span>lon</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>300.0</div><input id='attrs-834f0ac3-d8a2-4e04-8cc3-525ab14692e5' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-834f0ac3-d8a2-4e04-8cc3-525ab14692e5' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-c3ccaec7-5f5e-4523-9595-ec32c76ef935' class='xr-var-data-in' type='checkbox'><label for='data-c3ccaec7-5f5e-4523-9595-ec32c76ef935' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>longitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>1</dd><dt><span>units :</span></dt><dd>degree_east</dd></dl></div><pre class='xr-var-data'>array(300., dtype=float32)</pre></li><li class='xr-var-item'><div class='xr-var-name'><span>lat</span></div><div class='xr-var-dims'>()</div><div class='xr-var-dtype'>float32</div><div class='xr-var-preview xr-preview'>10.0</div><input id='attrs-649d1043-8b66-408c-95d4-5c0a3e8e6067' class='xr-var-attrs-in' type='checkbox' ><label for='attrs-649d1043-8b66-408c-95d4-5c0a3e8e6067' title='Show/Hide attributes'><svg class='icon xr-icon-file-text2'><use xlink:href='#icon-file-text2'></use></svg></label><input id='data-04197bed-939e-46b5-ad74-15f190536c3f' class='xr-var-data-in' type='checkbox'><label for='data-04197bed-939e-46b5-ad74-15f190536c3f' title='Show/Hide data repr'><svg class='icon xr-icon-database'><use xlink:href='#icon-database'></use></svg></label><div class='xr-var-attrs'><dl class='xr-attrs'><dt><span>standard_name :</span></dt><dd>latitude</dd><dt><span>pointwidth :</span></dt><dd>2.0</dd><dt><span>gridtype :</span></dt><dd>0</dd><dt><span>units :</span></dt><dd>degree_north</dd></dl></div><pre class='xr-var-data'>array(10., dtype=float32)</pre></li></ul></div></li><li class='xr-section-item'><input id='section-3dac6fdc-270c-4e3c-a9a0-7cd09b13a4f6' class='xr-section-summary-in' type='checkbox' disabled ><label for='section-3dac6fdc-270c-4e3c-a9a0-7cd09b13a4f6' class='xr-section-summary'  title='Expand/collapse section'>Attributes: <span>(0)</span></label><div class='xr-section-inline-details'></div><div class='xr-section-details'><dl class='xr-attrs'></dl></div></li></ul></div></div>"
      ],
      "text/plain": [
       "<xarray.DataArray 'sst' (time: 57)>\n",
       "dask.array<stack, shape=(57,), dtype=float32, chunksize=(1,), chunktype=numpy.ndarray>\n",
       "Coordinates:\n",
       "  * time     (time) datetime64[ns] 1960-12-31 1961-12-31 ... 2016-12-31\n",
       "    lon      float32 300.0\n",
       "    lat      float32 10.0"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sst_ts = ds_all.sst.sel(lon=300, lat=10)\n",
    "sst_ts_annual = sst_ts.resample(time='A').mean(dim='time')\n",
    "sst_ts_annual"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc69021b210>]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst_ts.plot()\n",
    "sst_ts_annual.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "An alternative approach is a \"running mean\" over the time dimension.\n",
    "This can be accomplished with xarray's `.rolling` operation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7fc690109d10>]"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sst_ts_rolling = sst_ts.rolling(time=24, center=True).mean()\n",
    "sst_ts_annual.plot(marker='o')\n",
    "sst_ts_rolling.plot()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Finale: Calculate the ENSO Index\n",
    "\n",
    "[This page from NOAA](https://www.ncdc.noaa.gov/teleconnections/enso/indicators/sst) explains how the El Niño Southern Oscillation index is calculated.\n",
    "\n",
    "\n",
    "- The Nino 3.4 region is defined as the region between +/- 5 deg. lat, 170 W - 120 W lon.\n",
    "- Warm or cold phases of the Oceanic Nino Index are defined by a five consecutive 3-month running mean of sea surface temperature (SST) anomalies in the Niño 3.4 region that is above (below) the threshold of +0.5°C (-0.5°C). This is known as the Oceanic Niño Index (ONI).\n",
    "\n",
    "(Note that \"anomaly\" means that the seasonal cycle is removed.)\n",
    "\n",
    "_Try working on this on your own for 5 minutes._"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Once you're done, try comparing the ENSO Index you calculated with the NINO3.4 index published by [NOAA](https://www.ncdc.noaa.gov/teleconnections/enso/indicators/sst/). The pandas snippet below will load the official time series for comparison."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "time\n",
       "1982-01-01    26.72\n",
       "1982-02-01    26.70\n",
       "1982-03-01    27.20\n",
       "1982-04-01    28.02\n",
       "1982-05-01    28.54\n",
       "Name: NINO3.4, dtype: float64"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "noaa_nino34 = pd.read_csv('https://www.cpc.ncep.noaa.gov/data/indices/sstoi.indices',\n",
    "                          sep=r\" \", skipinitialspace=True,\n",
    "                          parse_dates={'time': ['YR','MON']},\n",
    "                          index_col='time')['NINO3.4']\n",
    "noaa_nino34.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Getting Help with Xarray\n",
    "\n",
    "Here are some important resources for learning more about xarray and getting help.\n",
    "\n",
    "- [Xarray Documentation](http://xarray.pydata.org/en/latest/)\n",
    "- [Xarray GitHub Issue Tracker](https://github.com/pydata/xarray/issues)\n",
    "- [Xarray questions on StackOverflow](https://stackoverflow.com/questions/tagged/python-xarray)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
